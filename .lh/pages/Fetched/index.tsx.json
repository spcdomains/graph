{
    "sourceFile": "pages/Fetched/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1723802117286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723802178551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n //   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n const router=useRouter()\r\n const {query}=router;\r\n const {skintype,name}=query;\r\n console.log(query)\r\n@@ -66,8 +67,27 @@\n         // skin: selectedSkin,\r\n       },\r\n     });\r\n   };\r\n+\r\n+  useEffect(() => {\r\n+    const handleResize = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n+\r\n+    handleResize(); // Initial check\r\n+    window.addEventListener('resize', handleResize);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    // On large screens, set filterVisible to true\r\n+    if (!isMobile) {\r\n+      setFilterVisible(true);\r\n+    }\r\n+  }, [isMobile]);\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n     <FilterPopup\r\n         filterVisible={filterVisible}\r\n"
                },
                {
                    "date": 1723802196837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import axios from \"axios\";\r\n import styles from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n+import moduleName from '@/Components/Filterpop'\r\n import { useRouter } from \"next/router\";\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any[]>([]);\r\n"
                },
                {
                    "date": 1723802206445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from \"axios\";\r\n import styles from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n-import moduleName from '@/Components/Filterpop'\r\n+import Filterpop from '@/Components/Filterpop'\r\n import { useRouter } from \"next/router\";\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any[]>([]);\r\n"
                },
                {
                    "date": 1723802213360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     }\r\n   }, [isMobile]);\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-    <FilterPopup\r\n+    <Filterpop\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n"
                },
                {
                    "date": 1723802574064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n //   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n+  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n const router=useRouter()\r\n const {query}=router;\r\n const {skintype,name}=query;\r\n console.log(query)\r\n"
                },
                {
                    "date": 1723803422610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import axios from \"axios\";\r\n+import styles from \"./index.module.scss\";\r\n+import Link from \"next/link\";\r\n+import Image from \"next/image\";\r\n+import Filterpop from '@/Components/Filterpop'\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+const Index = () => {\r\n+  const [categories, setCategories] = useState<any[]>([]);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+//   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n+  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n+  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n+const router=useRouter()\r\n+const {query}=router;\r\n+const {skintype,name}=query;\r\n+console.log(query)\r\n+  useEffect(() => {\r\n+    const setInitialFilterVisibility = () => {\r\n+      if (window.innerWidth <= 768) {\r\n+        setFilterVisible(false);\r\n+      } else {\r\n+        setFilterVisible(true);\r\n+      }\r\n+    };\r\n+\r\n+    setInitialFilterVisibility();\r\n+\r\n+    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          `https://www.referback.trollsufficient.com/data/sort?permalink=${skintype}&skintype=${name}`\r\n+        );\r\n+        setCategories(response.data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching data:\", error);\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const toggleFilterVisibility = () => {\r\n+    setFilterVisible(!filterVisible);\r\n+  };\r\n+\r\n+  const closeFilter = () => {\r\n+    setFilterVisible(false);\r\n+  };\r\n+  const handleGoClick = () => {\r\n+    // Navigate to the /Fetched page with query parameters\r\n+    router.push({\r\n+      pathname: '/Fetched',\r\n+      query: {\r\n+        skintype: selectedCategory,\r\n+        name: selectedBuff,\r\n+        // skin: selectedSkin,\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleResize = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n+\r\n+    handleResize(); // Initial check\r\n+    window.addEventListener('resize', handleResize);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    // On large screens, set filterVisible to true\r\n+    if (!isMobile) {\r\n+      setFilterVisible(true);\r\n+    }\r\n+  }, [isMobile]);\r\n+  return (\r\n+    <div className={styles.cardContainer}>\r\n+    <Filterpop\r\n+        filterVisible={filterVisible}\r\n+        toggleFilterVisibility={toggleFilterVisibility}\r\n+        selectedSkin={selectedSkin}\r\n+        setSelectedSkin={setSelectedSkin}\r\n+        selectedCategory={selectedCategory}\r\n+        setSelectedCategory={setSelectedCategory}\r\n+        selectedBuff={selectedBuff}\r\n+        setSelectedBuff={setSelectedBuff}\r\n+        handleGoClick={handleGoClick}\r\n+      />\r\n+      {isMobile && (\r\n+        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n+          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n+        </button>\r\n+      )}\r\n+      <div className={styles.cards}>\r\n+        {categories.map((category: any) => (\r\n+          <Link\r\n+            key={category._id}\r\n+            href={`/Skintypes/${category.skintype}`}\r\n+            style={{ textDecoration: \"none\" }}\r\n+          >\r\n+            <div className={styles.card}>\r\n+              {category.photo && category.photo.length > 0 && (\r\n+                <Image\r\n+                  src={category.photo[0]} // Assuming you want to show the first photo\r\n+                  alt={category.skintype || \"Category Image\"}\r\n+                  className={styles.cardImage}\r\n+                  width={500} // Adjust width as needed\r\n+                  height={300} // Adjust height as needed\r\n+                />\r\n+              )}\r\n+              <div className={styles.cardContent}>\r\n+                <h2 className={styles.cardTitle}>{category.skintype}</h2>\r\n+                <p>Quantity: {category.quantity}</p>\r\n+                <p>Selling Amount: {category.sellingAmount}</p>\r\n+                <p>Buffs: {category.buff.map((b: any, index: number) => (\r\n+                  <span key={index}>\r\n+                    {Object.entries(b).map(([key, value]:any) => (\r\n+                      <span key={key}>{key}: {value}; </span>\r\n+                    ))}\r\n+                  </span>\r\n+                ))}</p>\r\n+              </div>\r\n+            </div>\r\n+          </Link>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Index;\r\n"
                },
                {
                    "date": 1723803500450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n import { useRouter } from \"next/router\";\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any[]>([]);\r\n+  // const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n-//   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n@@ -143,150 +143,4 @@\n   );\r\n };\r\n \r\n export default Index;\r\n-import React, { useEffect, useState } from \"react\";\r\n-import axios from \"axios\";\r\n-import styles from \"./index.module.scss\";\r\n-import Link from \"next/link\";\r\n-import Image from \"next/image\";\r\n-import Filterpop from '@/Components/Filterpop'\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-const Index = () => {\r\n-  const [categories, setCategories] = useState<any[]>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n-//   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n-  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n-  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n-  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n-const router=useRouter()\r\n-const {query}=router;\r\n-const {skintype,name}=query;\r\n-console.log(query)\r\n-  useEffect(() => {\r\n-    const setInitialFilterVisibility = () => {\r\n-      if (window.innerWidth <= 768) {\r\n-        setFilterVisible(false);\r\n-      } else {\r\n-        setFilterVisible(true);\r\n-      }\r\n-    };\r\n-\r\n-    setInitialFilterVisibility();\r\n-\r\n-    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n-\r\n-    return () => {\r\n-      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          `https://www.referback.trollsufficient.com/data/sort?permalink=${skintype}&skintype=${name}`\r\n-        );\r\n-        setCategories(response.data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching data:\", error);\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const toggleFilterVisibility = () => {\r\n-    setFilterVisible(!filterVisible);\r\n-  };\r\n-\r\n-  const closeFilter = () => {\r\n-    setFilterVisible(false);\r\n-  };\r\n-  const handleGoClick = () => {\r\n-    // Navigate to the /Fetched page with query parameters\r\n-    router.push({\r\n-      pathname: '/Fetched',\r\n-      query: {\r\n-        skintype: selectedCategory,\r\n-        name: selectedBuff,\r\n-        // skin: selectedSkin,\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleResize = () => {\r\n-      setIsMobile(window.innerWidth <= 768);\r\n-    };\r\n-\r\n-    handleResize(); // Initial check\r\n-    window.addEventListener('resize', handleResize);\r\n-\r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    // On large screens, set filterVisible to true\r\n-    if (!isMobile) {\r\n-      setFilterVisible(true);\r\n-    }\r\n-  }, [isMobile]);\r\n-  return (\r\n-    <div className={styles.cardContainer}>\r\n-    <Filterpop\r\n-        filterVisible={filterVisible}\r\n-        toggleFilterVisibility={toggleFilterVisibility}\r\n-        selectedSkin={selectedSkin}\r\n-        setSelectedSkin={setSelectedSkin}\r\n-        selectedCategory={selectedCategory}\r\n-        setSelectedCategory={setSelectedCategory}\r\n-        selectedBuff={selectedBuff}\r\n-        setSelectedBuff={setSelectedBuff}\r\n-        handleGoClick={handleGoClick}\r\n-      />\r\n-      {isMobile && (\r\n-        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n-        </button>\r\n-      )}\r\n-      <div className={styles.cards}>\r\n-        {categories.map((category: any) => (\r\n-          <Link\r\n-            key={category._id}\r\n-            href={`/Skintypes/${category.skintype}`}\r\n-            style={{ textDecoration: \"none\" }}\r\n-          >\r\n-            <div className={styles.card}>\r\n-              {category.photo && category.photo.length > 0 && (\r\n-                <Image\r\n-                  src={category.photo[0]} // Assuming you want to show the first photo\r\n-                  alt={category.skintype || \"Category Image\"}\r\n-                  className={styles.cardImage}\r\n-                  width={500} // Adjust width as needed\r\n-                  height={300} // Adjust height as needed\r\n-                />\r\n-              )}\r\n-              <div className={styles.cardContent}>\r\n-                <h2 className={styles.cardTitle}>{category.skintype}</h2>\r\n-                <p>Quantity: {category.quantity}</p>\r\n-                <p>Selling Amount: {category.sellingAmount}</p>\r\n-                <p>Buffs: {category.buff.map((b: any, index: number) => (\r\n-                  <span key={index}>\r\n-                    {Object.entries(b).map(([key, value]:any) => (\r\n-                      <span key={key}>{key}: {value}; </span>\r\n-                    ))}\r\n-                  </span>\r\n-                ))}</p>\r\n-              </div>\r\n-            </div>\r\n-          </Link>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Index;\r\n"
                },
                {
                    "date": 1723812082395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,23 +2,23 @@\n import axios from \"axios\";\r\n import styles from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n-import Filterpop from '@/Components/Filterpop'\r\n+import Filterpop from '@/Components/Filterpop';\r\n import { useRouter } from \"next/router\";\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any[]>([]);\r\n-  // const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n-const router=useRouter()\r\n-const {query}=router;\r\n-const {skintype,name}=query;\r\n-console.log(query)\r\n+  const router = useRouter();\r\n+  const { query } = router;\r\n+  const { skintype, name } = query;\r\n+  console.log(query);\r\n+\r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n       if (window.innerWidth <= 768) {\r\n         setFilterVisible(false);\r\n@@ -48,25 +48,24 @@\n       }\r\n     };\r\n \r\n     fetchData();\r\n-  }, []);\r\n+  }, [skintype, name]);\r\n \r\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n \r\n   const closeFilter = () => {\r\n     setFilterVisible(false);\r\n   };\r\n+\r\n   const handleGoClick = () => {\r\n-    // Navigate to the /Fetched page with query parameters\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n         skintype: selectedCategory,\r\n         name: selectedBuff,\r\n-        // skin: selectedSkin,\r\n       },\r\n     });\r\n   };\r\n \r\n@@ -81,17 +80,19 @@\n     return () => {\r\n       window.removeEventListener('resize', handleResize);\r\n     };\r\n   }, []);\r\n+\r\n   useEffect(() => {\r\n     // On large screens, set filterVisible to true\r\n     if (!isMobile) {\r\n       setFilterVisible(true);\r\n     }\r\n   }, [isMobile]);\r\n+\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-    <Filterpop\r\n+      <Filterpop\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -128,9 +129,9 @@\n                 <p>Quantity: {category.quantity}</p>\r\n                 <p>Selling Amount: {category.sellingAmount}</p>\r\n                 <p>Buffs: {category.buff.map((b: any, index: number) => (\r\n                   <span key={index}>\r\n-                    {Object.entries(b).map(([key, value]:any) => (\r\n+                    {Object.entries(b).map(([key, value]: any) => (\r\n                       <span key={key}>{key}: {value}; </span>\r\n                     ))}\r\n                   </span>\r\n                 ))}</p>\r\n"
                }
            ],
            "date": 1723802117286,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./index.module.scss\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Index = () => {\r\n  const [categories, setCategories] = useState<any[]>([]);\r\n  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n//   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\nconst router=useRouter()\r\nconst {query}=router;\r\nconst {skintype,name}=query;\r\nconsole.log(query)\r\n  useEffect(() => {\r\n    const setInitialFilterVisibility = () => {\r\n      if (window.innerWidth <= 768) {\r\n        setFilterVisible(false);\r\n      } else {\r\n        setFilterVisible(true);\r\n      }\r\n    };\r\n\r\n    setInitialFilterVisibility();\r\n\r\n    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://www.referback.trollsufficient.com/data/sort?permalink=${skintype}&skintype=${name}`\r\n        );\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const toggleFilterVisibility = () => {\r\n    setFilterVisible(!filterVisible);\r\n  };\r\n\r\n  const closeFilter = () => {\r\n    setFilterVisible(false);\r\n  };\r\n  const handleGoClick = () => {\r\n    // Navigate to the /Fetched page with query parameters\r\n    router.push({\r\n      pathname: '/Fetched',\r\n      query: {\r\n        skintype: selectedCategory,\r\n        name: selectedBuff,\r\n        // skin: selectedSkin,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className={styles.cardContainer}>\r\n    <FilterPopup\r\n        filterVisible={filterVisible}\r\n        toggleFilterVisibility={toggleFilterVisibility}\r\n        selectedSkin={selectedSkin}\r\n        setSelectedSkin={setSelectedSkin}\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        selectedBuff={selectedBuff}\r\n        setSelectedBuff={setSelectedBuff}\r\n        handleGoClick={handleGoClick}\r\n      />\r\n      {isMobile && (\r\n        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n        </button>\r\n      )}\r\n      <div className={styles.cards}>\r\n        {categories.map((category: any) => (\r\n          <Link\r\n            key={category._id}\r\n            href={`/Skintypes/${category.skintype}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <div className={styles.card}>\r\n              {category.photo && category.photo.length > 0 && (\r\n                <Image\r\n                  src={category.photo[0]} // Assuming you want to show the first photo\r\n                  alt={category.skintype || \"Category Image\"}\r\n                  className={styles.cardImage}\r\n                  width={500} // Adjust width as needed\r\n                  height={300} // Adjust height as needed\r\n                />\r\n              )}\r\n              <div className={styles.cardContent}>\r\n                <h2 className={styles.cardTitle}>{category.skintype}</h2>\r\n                <p>Quantity: {category.quantity}</p>\r\n                <p>Selling Amount: {category.sellingAmount}</p>\r\n                <p>Buffs: {category.buff.map((b: any, index: number) => (\r\n                  <span key={index}>\r\n                    {Object.entries(b).map(([key, value]:any) => (\r\n                      <span key={key}>{key}: {value}; </span>\r\n                    ))}\r\n                  </span>\r\n                ))}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"
        }
    ]
}