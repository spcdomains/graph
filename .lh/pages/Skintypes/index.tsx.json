{
    "sourceFile": "pages/Skintypes/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1723790201809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723790497782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n               </div>\r\n             </div>\r\n           </Link>\r\n         ))}\r\n-      </div>\r\n+      </div>  \r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1723793514933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect, useState } from \"react\";\r\n+import React, { useEffect, useState, useRef } from \"react\";\r\n import axios from \"axios\";\r\n import styles from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n@@ -10,9 +10,11 @@\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [keyboardOpen, setKeyboardOpen] = useState<boolean>(false);\r\n   const router = useRouter();\r\n+  const filterRef = useRef<HTMLDivElement>(null);\r\n \r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n       if (window.innerWidth <= 768) {\r\n@@ -23,12 +25,12 @@\n     };\r\n \r\n     setInitialFilterVisibility();\r\n \r\n-    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n+    window.addEventListener(\"resize\", handleResize);\r\n \r\n     return () => {\r\n-      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n+      window.removeEventListener(\"resize\", handleResize);\r\n     };\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -45,10 +47,9 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n-  const handleGoClick = (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n+  const handleGoClick = () => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n         skintype: selectedCategory,\r\n@@ -60,52 +61,76 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n \r\n-  const closeFilter = (e: React.MouseEvent) => {\r\n-    e.stopPropagation(); // Prevent click from propagating to the background\r\n-    setFilterVisible(false);\r\n+  const handleClickOutside = (e: MouseEvent) => {\r\n+    if (filterRef.current && !filterRef.current.contains(e.target as Node)) {\r\n+      setFilterVisible(false);\r\n+    }\r\n   };\r\n \r\n+  const handleResize = () => {\r\n+    // Detect keyboard visibility by comparing window inner height\r\n+    const isKeyboardOpen = window.innerHeight < document.documentElement.clientHeight;\r\n+    setKeyboardOpen(isKeyboardOpen);\r\n+\r\n+    // Adjust filter visibility based on keyboard status\r\n+    if (isKeyboardOpen) {\r\n+      setFilterVisible(true); // Keep filter visible if keyboard is open\r\n+    } else if (window.innerWidth <= 768) {\r\n+      setFilterVisible(false); // Hide filter on mobile if keyboard is not open\r\n+    } else {\r\n+      setFilterVisible(true); // Always show filter on larger screens\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener('mousedown', handleClickOutside);\r\n+    return () => {\r\n+      document.removeEventListener('mousedown', handleClickOutside);\r\n+    };\r\n+  }, []);\r\n+\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       {filterVisible && (\r\n-        <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}>\r\n-          <button className={styles.closeButton} onClick={closeFilter}>\r\n+        <div\r\n+          ref={filterRef}\r\n+          className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}\r\n+        >\r\n+          <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n             &times;\r\n           </button>\r\n-          <form onSubmit={handleGoClick}>\r\n-            <div className={styles.search_box}>\r\n-              <label>Search Box</label>\r\n-              <input \r\n-                placeholder=\"Search Here\" \r\n-                type=\"text\" \r\n-                value={selectedSkin}\r\n-                onChange={(e) => setSelectedSkin(e.target.value)}\r\n-              />\r\n-            </div>\r\n-            <div className={styles.search_box}>\r\n-              <label>Select Category</label>\r\n-              <input \r\n-                placeholder=\"Category\" \r\n-                type=\"text\" \r\n-                value={selectedCategory}\r\n-                onChange={(e) => setSelectedCategory(e.target.value)}\r\n-              />\r\n-            </div>\r\n-            <div className={styles.search_box}>\r\n-              <label>Select Buff</label>\r\n-              <input \r\n-                placeholder=\"Buff\" \r\n-                type=\"text\" \r\n-                value={selectedBuff}\r\n-                onChange={(e) => setSelectedBuff(e.target.value)}\r\n-              />\r\n-            </div>\r\n-            <div className={styles.btn}>\r\n-              <button type=\"submit\" style={{ width: \"100px\", height: \"30px\", marginTop: \"30px\", cursor: \"pointer\" }}>GO</button>\r\n-            </div>\r\n-          </form>\r\n+          <div className={styles.search_box}>\r\n+            <label>Search Box</label>\r\n+            <input \r\n+              placeholder=\"Search Here\" \r\n+              type=\"text\" \r\n+              value={selectedSkin}\r\n+              onChange={(e) => setSelectedSkin(e.target.value)}\r\n+            />\r\n+          </div>\r\n+          <div className={styles.search_box}>\r\n+            <label>Select Category</label>\r\n+            <input \r\n+              placeholder=\"Category\" \r\n+              type=\"text\" \r\n+              value={selectedCategory}\r\n+              onChange={(e) => setSelectedCategory(e.target.value)}\r\n+            />\r\n+          </div>\r\n+          <div className={styles.search_box}>\r\n+            <label>Select Buff</label>\r\n+            <input \r\n+              placeholder=\"Buff\" \r\n+              type=\"text\" \r\n+              value={selectedBuff}\r\n+              onChange={(e) => setSelectedBuff(e.target.value)}\r\n+            />\r\n+          </div>\r\n+          <div className={styles.btn}>\r\n+            <button onClick={handleGoClick} style={{ width: \"100px\", height: \"30px\", marginTop: \"30px\", cursor: \"pointer\" }}>GO</button>\r\n+          </div>\r\n         </div>\r\n       )}\r\n       <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n         {filterVisible ? \"Hide Filters\" : \"Show Filters\"}\r\n@@ -130,9 +155,9 @@\n               </div>\r\n             </div>\r\n           </Link>\r\n         ))}\r\n-      </div>  \r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1723797568730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect, useState, useRef } from \"react\";\r\n+import React, { useEffect, useState } from \"react\";\r\n import axios from \"axios\";\r\n import styles from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n@@ -10,11 +10,9 @@\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [keyboardOpen, setKeyboardOpen] = useState<boolean>(false);\r\n   const router = useRouter();\r\n-  const filterRef = useRef<HTMLDivElement>(null);\r\n \r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n       if (window.innerWidth <= 768) {\r\n@@ -25,12 +23,12 @@\n     };\r\n \r\n     setInitialFilterVisibility();\r\n \r\n-    window.addEventListener(\"resize\", handleResize);\r\n+    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n \r\n     return () => {\r\n-      window.removeEventListener(\"resize\", handleResize);\r\n+      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n     };\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -48,56 +46,31 @@\n     fetchData();\r\n   }, []);\r\n \r\n   const handleGoClick = () => {\r\n+    // Navigate to the /Fetched page with query parameters\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n         skintype: selectedCategory,\r\n         name: selectedBuff,\r\n+        // skin: selectedSkin,\r\n       },\r\n     });\r\n   };\r\n-\r\n+  \r\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n \r\n-  const handleClickOutside = (e: MouseEvent) => {\r\n-    if (filterRef.current && !filterRef.current.contains(e.target as Node)) {\r\n-      setFilterVisible(false);\r\n-    }\r\n+  const stopPropagation = (e: React.MouseEvent) => {\r\n+    e.stopPropagation(); // Prevent click from propagating to parent elements\r\n   };\r\n \r\n-  const handleResize = () => {\r\n-    // Detect keyboard visibility by comparing window inner height\r\n-    const isKeyboardOpen = window.innerHeight < document.documentElement.clientHeight;\r\n-    setKeyboardOpen(isKeyboardOpen);\r\n-\r\n-    // Adjust filter visibility based on keyboard status\r\n-    if (isKeyboardOpen) {\r\n-      setFilterVisible(true); // Keep filter visible if keyboard is open\r\n-    } else if (window.innerWidth <= 768) {\r\n-      setFilterVisible(false); // Hide filter on mobile if keyboard is not open\r\n-    } else {\r\n-      setFilterVisible(true); // Always show filter on larger screens\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener('mousedown', handleClickOutside);\r\n-    return () => {\r\n-      document.removeEventListener('mousedown', handleClickOutside);\r\n-    };\r\n-  }, []);\r\n-\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       {filterVisible && (\r\n-        <div\r\n-          ref={filterRef}\r\n-          className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}\r\n-        >\r\n+        <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`} onClick={stopPropagation}>\r\n           <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n             &times;\r\n           </button>\r\n           <div className={styles.search_box}>\r\n@@ -105,8 +78,9 @@\n             <input \r\n               placeholder=\"Search Here\" \r\n               type=\"text\" \r\n               value={selectedSkin}\r\n+              onClick={stopPropagation} // Prevent click from closing filter\r\n               onChange={(e) => setSelectedSkin(e.target.value)}\r\n             />\r\n           </div>\r\n           <div className={styles.search_box}>\r\n@@ -114,8 +88,9 @@\n             <input \r\n               placeholder=\"Category\" \r\n               type=\"text\" \r\n               value={selectedCategory}\r\n+              onClick={stopPropagation} // Prevent click from closing filter\r\n               onChange={(e) => setSelectedCategory(e.target.value)}\r\n             />\r\n           </div>\r\n           <div className={styles.search_box}>\r\n@@ -123,8 +98,9 @@\n             <input \r\n               placeholder=\"Buff\" \r\n               type=\"text\" \r\n               value={selectedBuff}\r\n+              onClick={stopPropagation} // Prevent click from closing filter\r\n               onChange={(e) => setSelectedBuff(e.target.value)}\r\n             />\r\n           </div>\r\n           <div className={styles.btn}>\r\n@@ -161,4 +137,180 @@\n   );\r\n };\r\n \r\n export default Index;\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// import React, { useEffect, useState } from \"react\";\r\n+// import axios from \"axios\";\r\n+// import styles from \"./index.module.scss\";\r\n+// import Link from \"next/link\";\r\n+// import Image from \"next/image\";\r\n+// import { useRouter } from \"next/router\";\r\n+\r\n+// const Index = () => {\r\n+//   const [categories, setCategories] = useState<any>([]);\r\n+//   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+//   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n+//   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n+//   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+//   const router = useRouter();\r\n+\r\n+//   useEffect(() => {\r\n+//     const setInitialFilterVisibility = () => {\r\n+//       if (window.innerWidth <= 768) {\r\n+//         setFilterVisible(false);\r\n+//       } else {\r\n+//         setFilterVisible(true);\r\n+//       }\r\n+//     };\r\n+\r\n+//     setInitialFilterVisibility();\r\n+\r\n+//     window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n+\r\n+//     return () => {\r\n+//       window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const fetchData = async () => {\r\n+//       try {\r\n+//         const response = await axios.get(\r\n+//           \"https://www.referback.trollsufficient.com/data/all-category\"\r\n+//         );\r\n+//         setCategories(response.data);\r\n+//       } catch (error) {\r\n+//         console.error(\"Error fetching data:\", error);\r\n+//       }\r\n+//     };\r\n+\r\n+//     fetchData();\r\n+//   }, []);\r\n+\r\n+//   const handleGoClick = () => {\r\n+//     // Navigate to the /Fetched page with query parameters\r\n+//     router.push({\r\n+//       pathname: '/Fetched',\r\n+//       query: {\r\n+//         skintype: selectedCategory,\r\n+//         name: selectedBuff,\r\n+//         // skin: selectedSkin,\r\n+//       },\r\n+//     });\r\n+//   };\r\n+\r\n+//   const toggleFilterVisibility = () => {\r\n+//     setFilterVisible(!filterVisible);\r\n+//   };\r\n+\r\n+//   const stopPropagation = (e: React.MouseEvent) => {\r\n+//     e.stopPropagation(); // Prevent click from propagating to parent elements\r\n+//   };\r\n+\r\n+//   const closeFilterOnOutsideClick = (e: React.MouseEvent) => {\r\n+//     if (window.innerWidth <= 768) {\r\n+//       setFilterVisible(false);\r\n+//     }\r\n+//   };\r\n+\r\n+//   return (\r\n+//     <div className={styles.cardContainer} onClick={closeFilterOnOutsideClick}>\r\n+//       {filterVisible && (\r\n+//         <div\r\n+//           className={`${styles.filter} ${\r\n+//             filterVisible ? styles.filterVisible : \"\"\r\n+//           }`}\r\n+//           onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside the filter\r\n+//         >\r\n+//           <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n+//             &times;\r\n+//           </button>\r\n+//           <div className={styles.search_box}>\r\n+//             <label>Search Box</label>\r\n+//             <input\r\n+//               placeholder=\"Search Here\"\r\n+//               type=\"text\"\r\n+//               value={selectedSkin}\r\n+//               onClick={stopPropagation} // Prevent click from closing filter on mobile\r\n+//               onChange={(e) => setSelectedSkin(e.target.value)}\r\n+//             />\r\n+//           </div>\r\n+//           <div className={styles.search_box}>\r\n+//             <label>Select Category</label>\r\n+//             <input\r\n+//               placeholder=\"Category\"\r\n+//               type=\"text\"\r\n+//               value={selectedCategory}\r\n+//               onClick={stopPropagation} // Prevent click from closing filter on mobile\r\n+//               onChange={(e) => setSelectedCategory(e.target.value)}\r\n+//             />\r\n+//           </div>\r\n+//           <div className={styles.search_box}>\r\n+//             <label>Select Buff</label>\r\n+//             <input\r\n+//               placeholder=\"Buff\"\r\n+//               type=\"text\"\r\n+//               value={selectedBuff}\r\n+//               onClick={stopPropagation} // Prevent click from closing filter on mobile\r\n+//               onChange={(e) => setSelectedBuff(e.target.value)}\r\n+//             />\r\n+//           </div>\r\n+//           <div className={styles.btn}>\r\n+//             <button\r\n+//               onClick={handleGoClick}\r\n+//               style={{\r\n+//                 width: \"100px\",\r\n+//                 height: \"30px\",\r\n+//                 marginTop: \"30px\",\r\n+//                 cursor: \"pointer\",\r\n+//               }}\r\n+//             >\r\n+//               GO\r\n+//             </button>\r\n+//           </div>\r\n+//         </div>\r\n+//       )}\r\n+//       <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n+//         {filterVisible ? \"Hide Filters\" : \"Show Filters\"}\r\n+//       </button>\r\n+//       <div className={styles.cards}>\r\n+//         {categories.map((category: any) => (\r\n+//           <Link\r\n+//             key={category._id}\r\n+//             href={`/Skintypes/${category.name}`}\r\n+//             style={{ textDecoration: \"none\" }}\r\n+//           >\r\n+//             <div className={styles.card}>\r\n+//               <Image\r\n+//                 src={category.photo}\r\n+//                 alt={category.name || \"Category Image\"}\r\n+//                 className={styles.cardImage}\r\n+//                 width={500}\r\n+//                 height={300}\r\n+//               />\r\n+//               <div className={styles.cardContent}>\r\n+//                 <h2 className={styles.cardTitle}>\r\n+//                   {category.name.toUpperCase()}\r\n+//                 </h2>\r\n+//               </div>\r\n+//             </div>\r\n+//           </Link>\r\n+//         ))}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Index;\r\n"
                },
                {
                    "date": 1723798010789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n@@ -45,42 +46,66 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n+  useEffect(() => {\r\n+    // Handle filter visibility based on input focus\r\n+    const handleFocus = () => setIsInputFocused(true);\r\n+    const handleBlur = () => setIsInputFocused(false);\r\n+\r\n+    const inputs = document.querySelectorAll('input');\r\n+\r\n+    inputs.forEach(input => {\r\n+      input.addEventListener('focus', handleFocus);\r\n+      input.addEventListener('blur', handleBlur);\r\n+    });\r\n+\r\n+    return () => {\r\n+      inputs.forEach(input => {\r\n+        input.removeEventListener('focus', handleFocus);\r\n+        input.removeEventListener('blur', handleBlur);\r\n+      });\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isInputFocused && window.innerWidth <= 768) {\r\n+      setFilterVisible(false);\r\n+    }\r\n+  }, [isInputFocused]);\r\n+\r\n   const handleGoClick = () => {\r\n-    // Navigate to the /Fetched page with query parameters\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n         skintype: selectedCategory,\r\n         name: selectedBuff,\r\n-        // skin: selectedSkin,\r\n       },\r\n     });\r\n   };\r\n   \r\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n-\r\n-  const stopPropagation = (e: React.MouseEvent) => {\r\n-    e.stopPropagation(); // Prevent click from propagating to parent elements\r\n+  \r\n+  const closeFilter = (e: React.MouseEvent) => {\r\n+    e.stopPropagation();\r\n+    setFilterVisible(false);\r\n   };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       {filterVisible && (\r\n-        <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`} onClick={stopPropagation}>\r\n-          <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n+        <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}>\r\n+          <button className={styles.closeButton} onClick={closeFilter}>\r\n             &times;\r\n           </button>\r\n           <div className={styles.search_box}>\r\n             <label>Search Box</label>\r\n             <input \r\n               placeholder=\"Search Here\" \r\n               type=\"text\" \r\n               value={selectedSkin}\r\n-              onClick={stopPropagation} // Prevent click from closing filter\r\n               onChange={(e) => setSelectedSkin(e.target.value)}\r\n             />\r\n           </div>\r\n           <div className={styles.search_box}>\r\n@@ -88,9 +113,8 @@\n             <input \r\n               placeholder=\"Category\" \r\n               type=\"text\" \r\n               value={selectedCategory}\r\n-              onClick={stopPropagation} // Prevent click from closing filter\r\n               onChange={(e) => setSelectedCategory(e.target.value)}\r\n             />\r\n           </div>\r\n           <div className={styles.search_box}>\r\n@@ -98,9 +122,8 @@\n             <input \r\n               placeholder=\"Buff\" \r\n               type=\"text\" \r\n               value={selectedBuff}\r\n-              onClick={stopPropagation} // Prevent click from closing filter\r\n               onChange={(e) => setSelectedBuff(e.target.value)}\r\n             />\r\n           </div>\r\n           <div className={styles.btn}>\r\n@@ -137,180 +160,4 @@\n   );\r\n };\r\n \r\n export default Index;\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// import React, { useEffect, useState } from \"react\";\r\n-// import axios from \"axios\";\r\n-// import styles from \"./index.module.scss\";\r\n-// import Link from \"next/link\";\r\n-// import Image from \"next/image\";\r\n-// import { useRouter } from \"next/router\";\r\n-\r\n-// const Index = () => {\r\n-//   const [categories, setCategories] = useState<any>([]);\r\n-//   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n-//   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n-//   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n-//   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-//   const router = useRouter();\r\n-\r\n-//   useEffect(() => {\r\n-//     const setInitialFilterVisibility = () => {\r\n-//       if (window.innerWidth <= 768) {\r\n-//         setFilterVisible(false);\r\n-//       } else {\r\n-//         setFilterVisible(true);\r\n-//       }\r\n-//     };\r\n-\r\n-//     setInitialFilterVisibility();\r\n-\r\n-//     window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n-\r\n-//     return () => {\r\n-//       window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const fetchData = async () => {\r\n-//       try {\r\n-//         const response = await axios.get(\r\n-//           \"https://www.referback.trollsufficient.com/data/all-category\"\r\n-//         );\r\n-//         setCategories(response.data);\r\n-//       } catch (error) {\r\n-//         console.error(\"Error fetching data:\", error);\r\n-//       }\r\n-//     };\r\n-\r\n-//     fetchData();\r\n-//   }, []);\r\n-\r\n-//   const handleGoClick = () => {\r\n-//     // Navigate to the /Fetched page with query parameters\r\n-//     router.push({\r\n-//       pathname: '/Fetched',\r\n-//       query: {\r\n-//         skintype: selectedCategory,\r\n-//         name: selectedBuff,\r\n-//         // skin: selectedSkin,\r\n-//       },\r\n-//     });\r\n-//   };\r\n-\r\n-//   const toggleFilterVisibility = () => {\r\n-//     setFilterVisible(!filterVisible);\r\n-//   };\r\n-\r\n-//   const stopPropagation = (e: React.MouseEvent) => {\r\n-//     e.stopPropagation(); // Prevent click from propagating to parent elements\r\n-//   };\r\n-\r\n-//   const closeFilterOnOutsideClick = (e: React.MouseEvent) => {\r\n-//     if (window.innerWidth <= 768) {\r\n-//       setFilterVisible(false);\r\n-//     }\r\n-//   };\r\n-\r\n-//   return (\r\n-//     <div className={styles.cardContainer} onClick={closeFilterOnOutsideClick}>\r\n-//       {filterVisible && (\r\n-//         <div\r\n-//           className={`${styles.filter} ${\r\n-//             filterVisible ? styles.filterVisible : \"\"\r\n-//           }`}\r\n-//           onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside the filter\r\n-//         >\r\n-//           <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n-//             &times;\r\n-//           </button>\r\n-//           <div className={styles.search_box}>\r\n-//             <label>Search Box</label>\r\n-//             <input\r\n-//               placeholder=\"Search Here\"\r\n-//               type=\"text\"\r\n-//               value={selectedSkin}\r\n-//               onClick={stopPropagation} // Prevent click from closing filter on mobile\r\n-//               onChange={(e) => setSelectedSkin(e.target.value)}\r\n-//             />\r\n-//           </div>\r\n-//           <div className={styles.search_box}>\r\n-//             <label>Select Category</label>\r\n-//             <input\r\n-//               placeholder=\"Category\"\r\n-//               type=\"text\"\r\n-//               value={selectedCategory}\r\n-//               onClick={stopPropagation} // Prevent click from closing filter on mobile\r\n-//               onChange={(e) => setSelectedCategory(e.target.value)}\r\n-//             />\r\n-//           </div>\r\n-//           <div className={styles.search_box}>\r\n-//             <label>Select Buff</label>\r\n-//             <input\r\n-//               placeholder=\"Buff\"\r\n-//               type=\"text\"\r\n-//               value={selectedBuff}\r\n-//               onClick={stopPropagation} // Prevent click from closing filter on mobile\r\n-//               onChange={(e) => setSelectedBuff(e.target.value)}\r\n-//             />\r\n-//           </div>\r\n-//           <div className={styles.btn}>\r\n-//             <button\r\n-//               onClick={handleGoClick}\r\n-//               style={{\r\n-//                 width: \"100px\",\r\n-//                 height: \"30px\",\r\n-//                 marginTop: \"30px\",\r\n-//                 cursor: \"pointer\",\r\n-//               }}\r\n-//             >\r\n-//               GO\r\n-//             </button>\r\n-//           </div>\r\n-//         </div>\r\n-//       )}\r\n-//       <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-//         {filterVisible ? \"Hide Filters\" : \"Show Filters\"}\r\n-//       </button>\r\n-//       <div className={styles.cards}>\r\n-//         {categories.map((category: any) => (\r\n-//           <Link\r\n-//             key={category._id}\r\n-//             href={`/Skintypes/${category.name}`}\r\n-//             style={{ textDecoration: \"none\" }}\r\n-//           >\r\n-//             <div className={styles.card}>\r\n-//               <Image\r\n-//                 src={category.photo}\r\n-//                 alt={category.name || \"Category Image\"}\r\n-//                 className={styles.cardImage}\r\n-//                 width={500}\r\n-//                 height={300}\r\n-//               />\r\n-//               <div className={styles.cardContent}>\r\n-//                 <h2 className={styles.cardTitle}>\r\n-//                   {category.name.toUpperCase()}\r\n-//                 </h2>\r\n-//               </div>\r\n-//             </div>\r\n-//           </Link>\r\n-//         ))}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Index;\r\n"
                },
                {
                    "date": 1723798877643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,26 +98,26 @@\n         <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}>\r\n           <button className={styles.closeButton} onClick={closeFilter}>\r\n             &times;\r\n           </button>\r\n-          <div className={styles.search_box}>\r\n+          {/* <div className={styles.search_box}>\r\n             <label>Search Box</label>\r\n             <input \r\n               placeholder=\"Search Here\" \r\n               type=\"text\" \r\n               value={selectedSkin}\r\n               onChange={(e) => setSelectedSkin(e.target.value)}\r\n             />\r\n-          </div>\r\n-          <div className={styles.search_box}>\r\n+          </div> */}\r\n+          {/* <div className={styles.search_box}>\r\n             <label>Select Category</label>\r\n             <input \r\n               placeholder=\"Category\" \r\n               type=\"text\" \r\n               value={selectedCategory}\r\n               onChange={(e) => setSelectedCategory(e.target.value)}\r\n             />\r\n-          </div>\r\n+          </div> */}\r\n           <div className={styles.search_box}>\r\n             <label>Select Buff</label>\r\n             <input \r\n               placeholder=\"Buff\" \r\n"
                },
                {
                    "date": 1723799477252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,17 +107,17 @@\n               value={selectedSkin}\r\n               onChange={(e) => setSelectedSkin(e.target.value)}\r\n             />\r\n           </div> */}\r\n-          {/* <div className={styles.search_box}>\r\n+          <div className={styles.search_box}>\r\n             <label>Select Category</label>\r\n             <input \r\n               placeholder=\"Category\" \r\n               type=\"text\" \r\n               value={selectedCategory}\r\n               onChange={(e) => setSelectedCategory(e.target.value)}\r\n             />\r\n-          </div> */}\r\n+          </div>\r\n           <div className={styles.search_box}>\r\n             <label>Select Buff</label>\r\n             <input \r\n               placeholder=\"Buff\" \r\n"
                },
                {
                    "date": 1723799486018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect, useState } from \"react\";\r\n+import React, { useEffect, useState, useRef } from \"react\";\r\n import axios from \"axios\";\r\n import styles from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import Image from \"next/image\";\r\n@@ -10,10 +10,11 @@\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\r\n+  const [keyboardOpen, setKeyboardOpen] = useState<boolean>(false);\r\n   const router = useRouter();\r\n+  const filterRef = useRef<HTMLDivElement>(null);\r\n \r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n       if (window.innerWidth <= 768) {\r\n@@ -24,12 +25,12 @@\n     };\r\n \r\n     setInitialFilterVisibility();\r\n \r\n-    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n+    window.addEventListener(\"resize\", handleResize);\r\n \r\n     return () => {\r\n-      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n+      window.removeEventListener(\"resize\", handleResize);\r\n     };\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -46,34 +47,8 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    // Handle filter visibility based on input focus\r\n-    const handleFocus = () => setIsInputFocused(true);\r\n-    const handleBlur = () => setIsInputFocused(false);\r\n-\r\n-    const inputs = document.querySelectorAll('input');\r\n-\r\n-    inputs.forEach(input => {\r\n-      input.addEventListener('focus', handleFocus);\r\n-      input.addEventListener('blur', handleBlur);\r\n-    });\r\n-\r\n-    return () => {\r\n-      inputs.forEach(input => {\r\n-        input.removeEventListener('focus', handleFocus);\r\n-        input.removeEventListener('blur', handleBlur);\r\n-      });\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isInputFocused && window.innerWidth <= 768) {\r\n-      setFilterVisible(false);\r\n-    }\r\n-  }, [isInputFocused]);\r\n-\r\n   const handleGoClick = () => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n@@ -81,34 +56,60 @@\n         name: selectedBuff,\r\n       },\r\n     });\r\n   };\r\n-  \r\n+\r\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n-  \r\n-  const closeFilter = (e: React.MouseEvent) => {\r\n-    e.stopPropagation();\r\n-    setFilterVisible(false);\r\n+\r\n+  const handleClickOutside = (e: MouseEvent) => {\r\n+    if (filterRef.current && !filterRef.current.contains(e.target as Node)) {\r\n+      setFilterVisible(false);\r\n+    }\r\n   };\r\n \r\n+  const handleResize = () => {\r\n+    // Detect keyboard visibility by comparing window inner height\r\n+    const isKeyboardOpen = window.innerHeight < document.documentElement.clientHeight;\r\n+    setKeyboardOpen(isKeyboardOpen);\r\n+\r\n+    // Adjust filter visibility based on keyboard status\r\n+    if (isKeyboardOpen) {\r\n+      setFilterVisible(true); // Keep filter visible if keyboard is open\r\n+    } else if (window.innerWidth <= 768) {\r\n+      setFilterVisible(false); // Hide filter on mobile if keyboard is not open\r\n+    } else {\r\n+      setFilterVisible(true); // Always show filter on larger screens\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener('mousedown', handleClickOutside);\r\n+    return () => {\r\n+      document.removeEventListener('mousedown', handleClickOutside);\r\n+    };\r\n+  }, []);\r\n+\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       {filterVisible && (\r\n-        <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}>\r\n-          <button className={styles.closeButton} onClick={closeFilter}>\r\n+        <div\r\n+          ref={filterRef}\r\n+          className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}\r\n+        >\r\n+          <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n             &times;\r\n           </button>\r\n-          {/* <div className={styles.search_box}>\r\n+          <div className={styles.search_box}>\r\n             <label>Search Box</label>\r\n             <input \r\n               placeholder=\"Search Here\" \r\n               type=\"text\" \r\n               value={selectedSkin}\r\n               onChange={(e) => setSelectedSkin(e.target.value)}\r\n             />\r\n-          </div> */}\r\n+          </div>\r\n           <div className={styles.search_box}>\r\n             <label>Select Category</label>\r\n             <input \r\n               placeholder=\"Category\" \r\n"
                },
                {
                    "date": 1723799797582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n-import React, { useEffect, useState, useRef } from \"react\";\r\n-import axios from \"axios\";\r\n-import styles from \"./index.module.scss\";\r\n-import Link from \"next/link\";\r\n-import Image from \"next/image\";\r\n-import { useRouter } from \"next/router\";\r\n+// Index.tsx\r\n+import React, { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import styles from './index.module.scss';\r\n+import Link from 'next/link';\r\n+import Image from 'next/image';\r\n+import { useRouter } from 'next/router';\r\n+import FilterPopup from './FilterPopup';  // Import the new component\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n@@ -12,9 +14,8 @@\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [keyboardOpen, setKeyboardOpen] = useState<boolean>(false);\r\n   const router = useRouter();\r\n-  const filterRef = useRef<HTMLDivElement>(null);\r\n \r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n       if (window.innerWidth <= 768) {\r\n@@ -61,14 +62,8 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n \r\n-  const handleClickOutside = (e: MouseEvent) => {\r\n-    if (filterRef.current && !filterRef.current.contains(e.target as Node)) {\r\n-      setFilterVisible(false);\r\n-    }\r\n-  };\r\n-\r\n   const handleResize = () => {\r\n     // Detect keyboard visibility by comparing window inner height\r\n     const isKeyboardOpen = window.innerHeight < document.documentElement.clientHeight;\r\n     setKeyboardOpen(isKeyboardOpen);\r\n@@ -82,57 +77,21 @@\n       setFilterVisible(true); // Always show filter on larger screens\r\n     }\r\n   };\r\n \r\n-  useEffect(() => {\r\n-    document.addEventListener('mousedown', handleClickOutside);\r\n-    return () => {\r\n-      document.removeEventListener('mousedown', handleClickOutside);\r\n-    };\r\n-  }, []);\r\n-\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      {filterVisible && (\r\n-        <div\r\n-          ref={filterRef}\r\n-          className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}\r\n-        >\r\n-          <button className={styles.closeButton} onClick={toggleFilterVisibility}>\r\n-            &times;\r\n-          </button>\r\n-          <div className={styles.search_box}>\r\n-            <label>Search Box</label>\r\n-            <input \r\n-              placeholder=\"Search Here\" \r\n-              type=\"text\" \r\n-              value={selectedSkin}\r\n-              onChange={(e) => setSelectedSkin(e.target.value)}\r\n-            />\r\n-          </div>\r\n-          <div className={styles.search_box}>\r\n-            <label>Select Category</label>\r\n-            <input \r\n-              placeholder=\"Category\" \r\n-              type=\"text\" \r\n-              value={selectedCategory}\r\n-              onChange={(e) => setSelectedCategory(e.target.value)}\r\n-            />\r\n-          </div>\r\n-          <div className={styles.search_box}>\r\n-            <label>Select Buff</label>\r\n-            <input \r\n-              placeholder=\"Buff\" \r\n-              type=\"text\" \r\n-              value={selectedBuff}\r\n-              onChange={(e) => setSelectedBuff(e.target.value)}\r\n-            />\r\n-          </div>\r\n-          <div className={styles.btn}>\r\n-            <button onClick={handleGoClick} style={{ width: \"100px\", height: \"30px\", marginTop: \"30px\", cursor: \"pointer\" }}>GO</button>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n+      <FilterPopup\r\n+        filterVisible={filterVisible}\r\n+        toggleFilterVisibility={toggleFilterVisibility}\r\n+        selectedSkin={selectedSkin}\r\n+        setSelectedSkin={setSelectedSkin}\r\n+        selectedCategory={selectedCategory}\r\n+        setSelectedCategory={setSelectedCategory}\r\n+        selectedBuff={selectedBuff}\r\n+        setSelectedBuff={setSelectedBuff}\r\n+        handleGoClick={handleGoClick}\r\n+      />\r\n       <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n         {filterVisible ? \"Hide Filters\" : \"Show Filters\"}\r\n       </button>\r\n       <div className={styles.cards}>\r\n"
                },
                {
                    "date": 1723799828643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n-import FilterPopup from './FilterPopup';  // Import the new component\r\n+import FilterPopup from '@/Components/Filterpop';  // Import the new component\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n"
                },
                {
                    "date": 1723800083809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n-// Index.tsx\r\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n-import FilterPopup from '@/Components/Filterpop';  // Import the new component\r\n+import FilterPopup from './FilterPopup';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n@@ -25,25 +24,24 @@\n       }\r\n     };\r\n \r\n     setInitialFilterVisibility();\r\n+    window.addEventListener('resize', handleResize);\r\n \r\n-    window.addEventListener(\"resize\", handleResize);\r\n-\r\n     return () => {\r\n-      window.removeEventListener(\"resize\", handleResize);\r\n+      window.removeEventListener('resize', handleResize);\r\n     };\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n       try {\r\n         const response = await axios.get(\r\n-          \"https://www.referback.trollsufficient.com/data/all-category\"\r\n+          'https://www.referback.trollsufficient.com/data/all-category'\r\n         );\r\n         setCategories(response.data);\r\n       } catch (error) {\r\n-        console.error(\"Error fetching data:\", error);\r\n+        console.error('Error fetching data:', error);\r\n       }\r\n     };\r\n \r\n     fetchData();\r\n@@ -91,21 +89,21 @@\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n       />\r\n       <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-        {filterVisible ? \"Hide Filters\" : \"Show Filters\"}\r\n+        {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n       </button>\r\n       <div className={styles.cards}>\r\n         {categories.map((category: any) => (\r\n           <Link\r\n             key={category._id}\r\n             href={`/Skintypes/${category.name}`}\r\n-            style={{ textDecoration: \"none\" }}\r\n+            style={{ textDecoration: 'none' }}\r\n           >\r\n             <div className={styles.card}>\r\n               <Image\r\n                 src={category.photo}\r\n-                alt={category.name || \"Category Image\"}\r\n+                alt={category.name || 'Category Image'}\r\n                 className={styles.cardImage}\r\n                 width={500}\r\n                 height={300}\r\n               />\r\n"
                },
                {
                    "date": 1723800104561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n-import FilterPopup from './FilterPopup';\r\n+import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n"
                },
                {
                    "date": 1723800310915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,16 @@\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n-import FilterPopup from '@/Components/Filterpop';\r\n+import FilterPopup from './FilterPopup';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [keyboardOpen, setKeyboardOpen] = useState<boolean>(false);\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n     const setInitialFilterVisibility = () => {\r\n@@ -63,11 +62,8 @@\n \r\n   const handleResize = () => {\r\n     // Detect keyboard visibility by comparing window inner height\r\n     const isKeyboardOpen = window.innerHeight < document.documentElement.clientHeight;\r\n-    setKeyboardOpen(isKeyboardOpen);\r\n-\r\n-    // Adjust filter visibility based on keyboard status\r\n     if (isKeyboardOpen) {\r\n       setFilterVisible(true); // Keep filter visible if keyboard is open\r\n     } else if (window.innerWidth <= 768) {\r\n       setFilterVisible(false); // Hide filter on mobile if keyboard is not open\r\n"
                },
                {
                    "date": 1723800331010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n-import FilterPopup from './FilterPopup';\r\n+import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n"
                },
                {
                    "date": 1723800559756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect, useState } from 'react';\r\n+import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n@@ -14,25 +14,8 @@\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n-    const setInitialFilterVisibility = () => {\r\n-      if (window.innerWidth <= 768) {\r\n-        setFilterVisible(false);\r\n-      } else {\r\n-        setFilterVisible(true);\r\n-      }\r\n-    };\r\n-\r\n-    setInitialFilterVisibility();\r\n-    window.addEventListener('resize', handleResize);\r\n-\r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n     const fetchData = async () => {\r\n       try {\r\n         const response = await axios.get(\r\n           'https://www.referback.trollsufficient.com/data/all-category'\r\n@@ -59,20 +42,8 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(!filterVisible);\r\n   };\r\n \r\n-  const handleResize = () => {\r\n-    // Detect keyboard visibility by comparing window inner height\r\n-    const isKeyboardOpen = window.innerHeight < document.documentElement.clientHeight;\r\n-    if (isKeyboardOpen) {\r\n-      setFilterVisible(true); // Keep filter visible if keyboard is open\r\n-    } else if (window.innerWidth <= 768) {\r\n-      setFilterVisible(false); // Hide filter on mobile if keyboard is not open\r\n-    } else {\r\n-      setFilterVisible(true); // Always show filter on larger screens\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       <FilterPopup\r\n         filterVisible={filterVisible}\r\n"
                },
                {
                    "date": 1723801906743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n@@ -28,8 +29,28 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n+  useEffect(() => {\r\n+    const handleResize = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n+\r\n+    handleResize(); // Initial check\r\n+    window.addEventListener('resize', handleResize);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    // On large screens, set filterVisible to true\r\n+    if (!isMobile) {\r\n+      setFilterVisible(true);\r\n+    }\r\n+  }, [isMobile]);\r\n+\r\n   const handleGoClick = () => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n@@ -39,9 +60,9 @@\n     });\r\n   };\r\n \r\n   const toggleFilterVisibility = () => {\r\n-    setFilterVisible(!filterVisible);\r\n+    setFilterVisible(prev => !prev);\r\n   };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n@@ -55,11 +76,13 @@\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n       />\r\n-      <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-        {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n-      </button>\r\n+      {isMobile && (\r\n+        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n+          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n+        </button>\r\n+      )}\r\n       <div className={styles.cards}>\r\n         {categories.map((category: any) => (\r\n           <Link\r\n             key={category._id}\r\n"
                },
                {
                    "date": 1723802473505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n+  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n"
                },
                {
                    "date": 1723802865364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,12 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(prev => !prev);\r\n   };\r\n \r\n+  const handleCardClick = (e: React.MouseEvent) => {\r\n+    e.stopPropagation(); // Prevent event from bubbling up\r\n+  };\r\n+\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       <FilterPopup\r\n         filterVisible={filterVisible}\r\n@@ -88,9 +92,9 @@\n             key={category._id}\r\n             href={`/Skintypes/${category.name}`}\r\n             style={{ textDecoration: 'none' }}\r\n           >\r\n-            <div className={styles.card}>\r\n+            <div className={styles.card} onClick={handleCardClick}>\r\n               <Image\r\n                 src={category.photo}\r\n                 alt={category.name || 'Category Image'}\r\n                 className={styles.cardImage}\r\n"
                },
                {
                    "date": 1723802880219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      <FilterPopup\r\n+      {/* <FilterPopup\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -79,9 +79,9 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-      />\r\n+      /> */}\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n"
                },
                {
                    "date": 1723802892291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import styles from './index.module.scss';\r\n+import Link from 'next/link';\r\n+import Image from 'next/image';\r\n+import { useRouter } from 'next/router';\r\n+import FilterPopup from '@/Components/Filterpop';\r\n+\r\n+const Index = () => {\r\n+  const [categories, setCategories] = useState<any>([]);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n+  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n+  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n+  const router = useRouter();\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          'https://www.referback.trollsufficient.com/data/all-category'\r\n+        );\r\n+        setCategories(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error fetching data:', error);\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const handleResize = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n+\r\n+    handleResize(); // Initial check\r\n+    window.addEventListener('resize', handleResize);\r\n+\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    // On large screens, set filterVisible to true\r\n+    if (!isMobile) {\r\n+      setFilterVisible(true);\r\n+    }\r\n+  }, [isMobile]);\r\n+\r\n+  const handleGoClick = () => {\r\n+    router.push({\r\n+      pathname: '/Fetched',\r\n+      query: {\r\n+        skintype: selectedCategory,\r\n+        name: selectedBuff,\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const toggleFilterVisibility = () => {\r\n+    setFilterVisible(prev => !prev);\r\n+  };\r\n+\r\n+  const handleCardClick = (e: React.MouseEvent) => {\r\n+    e.stopPropagation(); // Prevent event from bubbling up\r\n+  };\r\n+\r\n+  return (\r\n+    <div className={styles.cardContainer}>\r\n+      {/* <FilterPopup\r\n+        filterVisible={filterVisible}\r\n+        toggleFilterVisibility={toggleFilterVisibility}\r\n+        selectedSkin={selectedSkin}\r\n+        setSelectedSkin={setSelectedSkin}\r\n+        selectedCategory={selectedCategory}\r\n+        setSelectedCategory={setSelectedCategory}\r\n+        selectedBuff={selectedBuff}\r\n+        setSelectedBuff={setSelectedBuff}\r\n+        handleGoClick={handleGoClick}\r\n+      /> */}\r\n+      {isMobile && (\r\n+        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n+          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n+        </button>\r\n+      )}\r\n+      <div className={styles.cards}>\r\n+        {categories.map((category: any) => (\r\n+          <Link\r\n+            key={category._id}\r\n+            href={`/Skintypes/${category.name}`}\r\n+            style={{ textDecoration: 'none' }}\r\n+          >\r\n+            <div className={styles.card} onClick={handleCardClick}>\r\n+              <Image\r\n+                src={category.photo}\r\n+                alt={category.name || 'Category Image'}\r\n+                className={styles.cardImage}\r\n+                width={500}\r\n+                height={300}\r\n+              />\r\n+              <div className={styles.cardContent}>\r\n+                <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n+              </div>\r\n+            </div>\r\n+          </Link>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Index;\r\n"
                },
                {
                    "date": 1723802903026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      {/* <FilterPopup\r\n+      <FilterPopup\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -79,14 +79,14 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-      /> */}\r\n-      {isMobile && (\r\n+      />\r\n+      {/* {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n-      )}\r\n+      )} */}\r\n       <div className={styles.cards}>\r\n         {categories.map((category: any) => (\r\n           <Link\r\n             key={category._id}\r\n@@ -112,119 +112,4 @@\n   );\r\n };\r\n \r\n export default Index;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import styles from './index.module.scss';\r\n-import Link from 'next/link';\r\n-import Image from 'next/image';\r\n-import { useRouter } from 'next/router';\r\n-import FilterPopup from '@/Components/Filterpop';\r\n-\r\n-const Index = () => {\r\n-  const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n-  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n-  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n-  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n-  const router = useRouter();\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          'https://www.referback.trollsufficient.com/data/all-category'\r\n-        );\r\n-        setCategories(response.data);\r\n-      } catch (error) {\r\n-        console.error('Error fetching data:', error);\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const handleResize = () => {\r\n-      setIsMobile(window.innerWidth <= 768);\r\n-    };\r\n-\r\n-    handleResize(); // Initial check\r\n-    window.addEventListener('resize', handleResize);\r\n-\r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    // On large screens, set filterVisible to true\r\n-    if (!isMobile) {\r\n-      setFilterVisible(true);\r\n-    }\r\n-  }, [isMobile]);\r\n-\r\n-  const handleGoClick = () => {\r\n-    router.push({\r\n-      pathname: '/Fetched',\r\n-      query: {\r\n-        skintype: selectedCategory,\r\n-        name: selectedBuff,\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const toggleFilterVisibility = () => {\r\n-    setFilterVisible(prev => !prev);\r\n-  };\r\n-\r\n-  const handleCardClick = (e: React.MouseEvent) => {\r\n-    e.stopPropagation(); // Prevent event from bubbling up\r\n-  };\r\n-\r\n-  return (\r\n-    <div className={styles.cardContainer}>\r\n-      {/* <FilterPopup\r\n-        filterVisible={filterVisible}\r\n-        toggleFilterVisibility={toggleFilterVisibility}\r\n-        selectedSkin={selectedSkin}\r\n-        setSelectedSkin={setSelectedSkin}\r\n-        selectedCategory={selectedCategory}\r\n-        setSelectedCategory={setSelectedCategory}\r\n-        selectedBuff={selectedBuff}\r\n-        setSelectedBuff={setSelectedBuff}\r\n-        handleGoClick={handleGoClick}\r\n-      /> */}\r\n-      {isMobile && (\r\n-        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n-        </button>\r\n-      )}\r\n-      <div className={styles.cards}>\r\n-        {categories.map((category: any) => (\r\n-          <Link\r\n-            key={category._id}\r\n-            href={`/Skintypes/${category.name}`}\r\n-            style={{ textDecoration: 'none' }}\r\n-          >\r\n-            <div className={styles.card} onClick={handleCardClick}>\r\n-              <Image\r\n-                src={category.photo}\r\n-                alt={category.name || 'Category Image'}\r\n-                className={styles.cardImage}\r\n-                width={500}\r\n-                height={300}\r\n-              />\r\n-              <div className={styles.cardContent}>\r\n-                <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n-              </div>\r\n-            </div>\r\n-          </Link>\r\n-        ))}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Index;\r\n"
                },
                {
                    "date": 1723802948368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n"
                },
                {
                    "date": 1723802958488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n"
                },
                {
                    "date": 1723802969748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,19 +69,9 @@\n   };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      <FilterPopup\r\n-        filterVisible={filterVisible}\r\n-        toggleFilterVisibility={toggleFilterVisibility}\r\n-        selectedSkin={selectedSkin}\r\n-        setSelectedSkin={setSelectedSkin}\r\n-        selectedCategory={selectedCategory}\r\n-        setSelectedCategory={setSelectedCategory}\r\n-        selectedBuff={selectedBuff}\r\n-        setSelectedBuff={setSelectedBuff}\r\n-        handleGoClick={handleGoClick}\r\n-      />\r\n+    \r\n       {/* {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n"
                },
                {
                    "date": 1723802992712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n import FilterPopup from '@/Components/Filterpop';\r\n+import { div } from 'three/examples/jsm/nodes/Nodes.js';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n@@ -68,8 +69,19 @@\n     e.stopPropagation(); // Prevent event from bubbling up\r\n   };\r\n \r\n   return (\r\n+    <>  <FilterPopup\r\n+    filterVisible={filterVisible}\r\n+    toggleFilterVisibility={toggleFilterVisibility}\r\n+    selectedSkin={selectedSkin}\r\n+    setSelectedSkin={setSelectedSkin}\r\n+    selectedCategory={selectedCategory}\r\n+    setSelectedCategory={setSelectedCategory}\r\n+    selectedBuff={selectedBuff}\r\n+    setSelectedBuff={setSelectedBuff}\r\n+    handleGoClick={handleGoClick}\r\n+  />\r\n     <div className={styles.cardContainer}>\r\n     \r\n       {/* {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n@@ -98,8 +110,9 @@\n           </Link>\r\n         ))}\r\n       </div>\r\n     </div>\r\n+    </>\r\n   );\r\n };\r\n \r\n export default Index;\r\n"
                },
                {
                    "date": 1723803025463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n import { useRouter } from 'next/router';\r\n import FilterPopup from '@/Components/Filterpop';\r\n-import { div } from 'three/examples/jsm/nodes/Nodes.js';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n   const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n@@ -69,26 +68,25 @@\n     e.stopPropagation(); // Prevent event from bubbling up\r\n   };\r\n \r\n   return (\r\n-    <>  <FilterPopup\r\n-    filterVisible={filterVisible}\r\n-    toggleFilterVisibility={toggleFilterVisibility}\r\n-    selectedSkin={selectedSkin}\r\n-    setSelectedSkin={setSelectedSkin}\r\n-    selectedCategory={selectedCategory}\r\n-    setSelectedCategory={setSelectedCategory}\r\n-    selectedBuff={selectedBuff}\r\n-    setSelectedBuff={setSelectedBuff}\r\n-    handleGoClick={handleGoClick}\r\n-  />\r\n     <div className={styles.cardContainer}>\r\n-    \r\n-      {/* {isMobile && (\r\n+      <FilterPopup\r\n+        filterVisible={filterVisible}\r\n+        toggleFilterVisibility={toggleFilterVisibility}\r\n+        selectedSkin={selectedSkin}\r\n+        setSelectedSkin={setSelectedSkin}\r\n+        selectedCategory={selectedCategory}\r\n+        setSelectedCategory={setSelectedCategory}\r\n+        selectedBuff={selectedBuff}\r\n+        setSelectedBuff={setSelectedBuff}\r\n+        handleGoClick={handleGoClick}\r\n+      />\r\n+      {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n-      )} */}\r\n+      )}\r\n       <div className={styles.cards}>\r\n         {categories.map((category: any) => (\r\n           <Link\r\n             key={category._id}\r\n@@ -110,9 +108,8 @@\n           </Link>\r\n         ))}\r\n       </div>\r\n     </div>\r\n-    </>\r\n   );\r\n };\r\n \r\n export default Index;\r\n"
                },
                {
                    "date": 1723803049827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,11 +63,11 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(prev => !prev);\r\n   };\r\n \r\n-  const handleCardClick = (e: React.MouseEvent) => {\r\n-    e.stopPropagation(); // Prevent event from bubbling up\r\n-  };\r\n+  // const handleCardClick = (e: React.MouseEvent) => {\r\n+  //   e.stopPropagation(); // Prevent event from bubbling up\r\n+  // };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       <FilterPopup\r\n"
                },
                {
                    "date": 1723803058093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n             key={category._id}\r\n             href={`/Skintypes/${category.name}`}\r\n             style={{ textDecoration: 'none' }}\r\n           >\r\n-            <div className={styles.card} onClick={handleCardClick}>\r\n+            <div className={styles.card} >\r\n               <Image\r\n                 src={category.photo}\r\n                 alt={category.name || 'Category Image'}\r\n                 className={styles.cardImage}\r\n"
                },
                {
                    "date": 1723803109112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,13 +80,13 @@\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n       />\r\n-      {isMobile && (\r\n+      {/* {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n-      )}\r\n+      )} */}\r\n       <div className={styles.cards}>\r\n         {categories.map((category: any) => (\r\n           <Link\r\n             key={category._id}\r\n"
                },
                {
                    "date": 1723803119752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,14 +42,14 @@\n       window.removeEventListener('resize', handleResize);\r\n     };\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    // On large screens, set filterVisible to true\r\n-    if (!isMobile) {\r\n-      setFilterVisible(true);\r\n-    }\r\n-  }, [isMobile]);\r\n+  // useEffect(() => {\r\n+  //   // On large screens, set filterVisible to true\r\n+  //   if (!isMobile) {\r\n+  //     setFilterVisible(true);\r\n+  //   }\r\n+  // }, [isMobile]);\r\n \r\n   const handleGoClick = () => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n@@ -80,13 +80,13 @@\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n       />\r\n-      {/* {isMobile && (\r\n+      {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n-      )} */}\r\n+      )}\r\n       <div className={styles.cards}>\r\n         {categories.map((category: any) => (\r\n           <Link\r\n             key={category._id}\r\n"
                },
                {
                    "date": 1723803129844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     };\r\n   }, []);\r\n \r\n   // useEffect(() => {\r\n-  //   // On large screens, set filterVisible to true\r\n+\r\n   //   if (!isMobile) {\r\n   //     setFilterVisible(true);\r\n   //   }\r\n   // }, [isMobile]);\r\n"
                },
                {
                    "date": 1723803137167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,20 +29,20 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    const handleResize = () => {\r\n-      setIsMobile(window.innerWidth <= 768);\r\n-    };\r\n+  // useEffect(() => {\r\n+  //   const handleResize = () => {\r\n+  //     setIsMobile(window.innerWidth <= 768);\r\n+  //   };\r\n \r\n-    handleResize(); // Initial check\r\n-    window.addEventListener('resize', handleResize);\r\n+  //   handleResize(); // Initial check\r\n+  //   window.addEventListener('resize', handleResize);\r\n \r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []);\r\n+  //   return () => {\r\n+  //     window.removeEventListener('resize', handleResize);\r\n+  //   };\r\n+  // }, []);\r\n \r\n   // useEffect(() => {\r\n \r\n   //   if (!isMobile) {\r\n"
                },
                {
                    "date": 1723803147971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   // };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      <FilterPopup\r\n+      {/* <FilterPopup\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -79,9 +79,9 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-      />\r\n+      /> */}\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n"
                },
                {
                    "date": 1723803163581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   // };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      {/* <FilterPopup\r\n+      <FilterPopup\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -79,9 +79,9 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-      /> */}\r\n+      />\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n"
                },
                {
                    "date": 1723805046051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   // };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      <FilterPopup\r\n+      {/* <FilterPopup\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -79,9 +79,9 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-      />\r\n+      /> */}\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n"
                },
                {
                    "date": 1723811495416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n@@ -69,9 +69,9 @@\n   // };\r\n \r\n   return (\r\n     <div className={styles.cardContainer}>\r\n-      {/* <FilterPopup\r\n+      <FilterPopup\r\n         filterVisible={filterVisible}\r\n         toggleFilterVisibility={toggleFilterVisibility}\r\n         selectedSkin={selectedSkin}\r\n         setSelectedSkin={setSelectedSkin}\r\n@@ -79,9 +79,9 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-      /> */}\r\n+      />\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n         </button>\r\n"
                },
                {
                    "date": 1723811509595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n"
                },
                {
                    "date": 1723811582220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,13 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true); // Default to true\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n+  const [isMobile, setIsMobile] = useState<boolean>(false); // Default to false\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n@@ -29,28 +29,28 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n-  // useEffect(() => {\r\n-  //   const handleResize = () => {\r\n-  //     setIsMobile(window.innerWidth <= 768);\r\n-  //   };\r\n+  useEffect(() => {\r\n+    const handleResize = () => {\r\n+      setIsMobile(window.innerWidth <= 768);\r\n+    };\r\n \r\n-  //   handleResize(); // Initial check\r\n-  //   window.addEventListener('resize', handleResize);\r\n+    handleResize(); // Initial check\r\n+    window.addEventListener('resize', handleResize);\r\n \r\n-  //   return () => {\r\n-  //     window.removeEventListener('resize', handleResize);\r\n-  //   };\r\n-  // }, []);\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []);\r\n \r\n-  // useEffect(() => {\r\n+  useEffect(() => {\r\n+    // Always show filter on larger screens, toggle on mobile\r\n+    if (!isMobile) {\r\n+      setFilterVisible(true); // Always visible on large screens\r\n+    }\r\n+  }, [isMobile]);\r\n \r\n-  //   if (!isMobile) {\r\n-  //     setFilterVisible(true);\r\n-  //   }\r\n-  // }, [isMobile]);\r\n-\r\n   const handleGoClick = () => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n@@ -63,12 +63,8 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(prev => !prev);\r\n   };\r\n \r\n-  // const handleCardClick = (e: React.MouseEvent) => {\r\n-  //   e.stopPropagation(); // Prevent event from bubbling up\r\n-  // };\r\n-\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       <FilterPopup\r\n         filterVisible={filterVisible}\r\n@@ -92,9 +88,9 @@\n             key={category._id}\r\n             href={`/Skintypes/${category.name}`}\r\n             style={{ textDecoration: 'none' }}\r\n           >\r\n-            <div className={styles.card} >\r\n+            <div className={styles.card}>\r\n               <Image\r\n                 src={category.photo}\r\n                 alt={category.name || 'Category Image'}\r\n                 className={styles.cardImage}\r\n"
                },
                {
                    "date": 1723811756900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, useEffect } from 'react';\r\n+import React, { useState, useEffect, useCallback } from 'react';\r\n import axios from 'axios';\r\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n@@ -63,8 +63,28 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(prev => !prev);\r\n   };\r\n \r\n+  // Click handler for filter popup\r\n+  const handlePopupClick = (e: React.MouseEvent) => {\r\n+    e.stopPropagation(); // Prevent the event from bubbling up\r\n+  };\r\n+\r\n+  // Click handler for the document to close popup when clicking outside\r\n+  const handleDocumentClick = useCallback((e: MouseEvent) => {\r\n+    const filterElement = document.querySelector(`.${styles.filter}`);\r\n+    if (filterVisible && filterElement && !filterElement.contains(e.target as Node)) {\r\n+      setFilterVisible(false);\r\n+    }\r\n+  }, [filterVisible]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener('click', handleDocumentClick);\r\n+    return () => {\r\n+      document.removeEventListener('click', handleDocumentClick);\r\n+    };\r\n+  }, [handleDocumentClick]);\r\n+\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       <FilterPopup\r\n         filterVisible={filterVisible}\r\n@@ -75,8 +95,9 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n+        onClick={handlePopupClick} // Ensure clicks inside the popup do not close it\r\n       />\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n"
                },
                {
                    "date": 1723811890692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, useEffect, useCallback } from 'react';\r\n+import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import styles from './index.module.scss';\r\n import Link from 'next/link';\r\n import Image from 'next/image';\r\n@@ -7,13 +7,13 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(true); // Default to true\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(false); // Default to false\r\n+  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n   const router = useRouter();\r\n \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n@@ -29,28 +29,28 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    const handleResize = () => {\r\n-      setIsMobile(window.innerWidth <= 768);\r\n-    };\r\n+  // useEffect(() => {\r\n+  //   const handleResize = () => {\r\n+  //     setIsMobile(window.innerWidth <= 768);\r\n+  //   };\r\n \r\n-    handleResize(); // Initial check\r\n-    window.addEventListener('resize', handleResize);\r\n+  //   handleResize(); // Initial check\r\n+  //   window.addEventListener('resize', handleResize);\r\n \r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []);\r\n+  //   return () => {\r\n+  //     window.removeEventListener('resize', handleResize);\r\n+  //   };\r\n+  // }, []);\r\n \r\n-  useEffect(() => {\r\n-    // Always show filter on larger screens, toggle on mobile\r\n-    if (!isMobile) {\r\n-      setFilterVisible(true); // Always visible on large screens\r\n-    }\r\n-  }, [isMobile]);\r\n+  // useEffect(() => {\r\n \r\n+  //   if (!isMobile) {\r\n+  //     setFilterVisible(true);\r\n+  //   }\r\n+  // }, [isMobile]);\r\n+\r\n   const handleGoClick = () => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n@@ -63,28 +63,12 @@\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(prev => !prev);\r\n   };\r\n \r\n-  // Click handler for filter popup\r\n-  const handlePopupClick = (e: React.MouseEvent) => {\r\n-    e.stopPropagation(); // Prevent the event from bubbling up\r\n-  };\r\n+  // const handleCardClick = (e: React.MouseEvent) => {\r\n+  //   e.stopPropagation(); // Prevent event from bubbling up\r\n+  // };\r\n \r\n-  // Click handler for the document to close popup when clicking outside\r\n-  const handleDocumentClick = useCallback((e: MouseEvent) => {\r\n-    const filterElement = document.querySelector(`.${styles.filter}`);\r\n-    if (filterVisible && filterElement && !filterElement.contains(e.target as Node)) {\r\n-      setFilterVisible(false);\r\n-    }\r\n-  }, [filterVisible]);\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener('click', handleDocumentClick);\r\n-    return () => {\r\n-      document.removeEventListener('click', handleDocumentClick);\r\n-    };\r\n-  }, [handleDocumentClick]);\r\n-\r\n   return (\r\n     <div className={styles.cardContainer}>\r\n       <FilterPopup\r\n         filterVisible={filterVisible}\r\n@@ -95,9 +79,8 @@\n         setSelectedCategory={setSelectedCategory}\r\n         selectedBuff={selectedBuff}\r\n         setSelectedBuff={setSelectedBuff}\r\n         handleGoClick={handleGoClick}\r\n-        onClick={handlePopupClick} // Ensure clicks inside the popup do not close it\r\n       />\r\n       {isMobile && (\r\n         <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n           {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n@@ -109,9 +92,9 @@\n             key={category._id}\r\n             href={`/Skintypes/${category.name}`}\r\n             style={{ textDecoration: 'none' }}\r\n           >\r\n-            <div className={styles.card}>\r\n+            <div className={styles.card} >\r\n               <Image\r\n                 src={category.photo}\r\n                 alt={category.name || 'Category Image'}\r\n                 className={styles.cardImage}\r\n"
                },
                {
                    "date": 1723814517711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n"
                },
                {
                    "date": 1723814602590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(window.innerWidth >= 1024);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n"
                },
                {
                    "date": 1723814619658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,21 @@\n     };\r\n \r\n     fetchData();\r\n   }, []);\r\n+  useEffect(() => {\r\n+    const handleResize = () => {\r\n+      setFilterVisible(window.innerWidth >= 1024);\r\n+    };\r\n \r\n+    // Add event listener\r\n+    window.addEventListener('resize', handleResize);\r\n+\r\n+    // Cleanup event listener on component unmount\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []);\r\n   // useEffect(() => {\r\n   //   const handleResize = () => {\r\n   //     setIsMobile(window.innerWidth <= 768);\r\n   //   };\r\n"
                },
                {
                    "date": 1723814674959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import FilterPopup from '@/Components/Filterpop';\r\n \r\n const Index = () => {\r\n   const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(window.innerWidth >= 1024);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n   const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n   const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n   const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n   const [isMobile, setIsMobile] = useState<boolean>(true);\r\n"
                },
                {
                    "date": 1723814684709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,21 +28,9 @@\n     };\r\n \r\n     fetchData();\r\n   }, []);\r\n-  useEffect(() => {\r\n-    const handleResize = () => {\r\n-      setFilterVisible(window.innerWidth >= 1024);\r\n-    };\r\n-\r\n-    // Add event listener\r\n-    window.addEventListener('resize', handleResize);\r\n-\r\n-    // Cleanup event listener on component unmount\r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n   // useEffect(() => {\r\n   //   const handleResize = () => {\r\n   //     setIsMobile(window.innerWidth <= 768);\r\n   //   };\r\n"
                },
                {
                    "date": 1723814691579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     };\r\n \r\n     fetchData();\r\n   }, []);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n+\r\n   // useEffect(() => {\r\n   //   const handleResize = () => {\r\n   //     setIsMobile(window.innerWidth <= 768);\r\n   //   };\r\n"
                },
                {
                    "date": 1723814697765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,26 @@\n     };\r\n \r\n     fetchData();\r\n   }, []);\r\n+  useEffect(() => {\r\n+    // Define a function to handle resize\r\n+    const handleResize = () => {\r\n+      setFilterVisible(window.innerWidth >= 1024);\r\n+    };\r\n \r\n+    // Set initial state\r\n+    handleResize();\r\n+\r\n+    // Add event listener for resize\r\n+    window.addEventListener('resize', handleResize);\r\n+\r\n+    // Cleanup the event listener on component unmount\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []); // Empty dependency array means this effect runs once on mount and cleanup on unmount\r\n+\r\n   // useEffect(() => {\r\n   //   const handleResize = () => {\r\n   //     setIsMobile(window.innerWidth <= 768);\r\n   //   };\r\n"
                },
                {
                    "date": 1723874763103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,17 +66,16 @@\n   //     setFilterVisible(true);\r\n   //   }\r\n   // }, [isMobile]);\r\n \r\n-  const handleGoClick = () => {\r\n+  const handleSuggestionClick = (skintype: string) => {\r\n+    setSearchTerm(skintype);\r\n     router.push({\r\n       pathname: '/Fetched',\r\n-      query: {\r\n-        skintype: selectedCategory,\r\n-        name: selectedBuff,\r\n-      },\r\n+      query: { skintype: encodeURIComponent(skintype) },\r\n     });\r\n   };\r\n+  \r\n \r\n   const toggleFilterVisibility = () => {\r\n     setFilterVisible(prev => !prev);\r\n   };\r\n"
                },
                {
                    "date": 1723874826738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,131 +1,131 @@\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import styles from './index.module.scss';\r\n-import Link from 'next/link';\r\n-import Image from 'next/image';\r\n-import { useRouter } from 'next/router';\r\n-import FilterPopup from '@/Components/Filterpop';\r\n+  import React, { useState, useEffect } from 'react';\r\n+  import axios from 'axios';\r\n+  import styles from './index.module.scss';\r\n+  import Link from 'next/link';\r\n+  import Image from 'next/image';\r\n+  import { useRouter } from 'next/router';\r\n+  import FilterPopup from '@/Components/Filterpop';\r\n \r\n-const Index = () => {\r\n-  const [categories, setCategories] = useState<any>([]);\r\n-  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n-  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n-  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n-  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n-  const router = useRouter();\r\n+  const Index = () => {\r\n+    const [categories, setCategories] = useState<any>([]);\r\n+    const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n+    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n+    const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n+    const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+    const [isMobile, setIsMobile] = useState<boolean>(true);\r\n+    const router = useRouter();\r\n \r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      try {\r\n-        const response = await axios.get(\r\n-          'https://www.referback.trollsufficient.com/data/all-category'\r\n-        );\r\n-        setCategories(response.data);\r\n-      } catch (error) {\r\n-        console.error('Error fetching data:', error);\r\n-      }\r\n-    };\r\n+    useEffect(() => {\r\n+      const fetchData = async () => {\r\n+        try {\r\n+          const response = await axios.get(\r\n+            'https://www.referback.trollsufficient.com/data/all-category'\r\n+          );\r\n+          setCategories(response.data);\r\n+        } catch (error) {\r\n+          console.error('Error fetching data:', error);\r\n+        }\r\n+      };\r\n \r\n-    fetchData();\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    // Define a function to handle resize\r\n-    const handleResize = () => {\r\n-      setFilterVisible(window.innerWidth >= 1024);\r\n-    };\r\n+      fetchData();\r\n+    }, []);\r\n+    useEffect(() => {\r\n+      // Define a function to handle resize\r\n+      const handleResize = () => {\r\n+        setFilterVisible(window.innerWidth >= 1024);\r\n+      };\r\n \r\n-    // Set initial state\r\n-    handleResize();\r\n+      // Set initial state\r\n+      handleResize();\r\n \r\n-    // Add event listener for resize\r\n-    window.addEventListener('resize', handleResize);\r\n+      // Add event listener for resize\r\n+      window.addEventListener('resize', handleResize);\r\n \r\n-    // Cleanup the event listener on component unmount\r\n-    return () => {\r\n-      window.removeEventListener('resize', handleResize);\r\n-    };\r\n-  }, []); // Empty dependency array means this effect runs once on mount and cleanup on unmount\r\n+      // Cleanup the event listener on component unmount\r\n+      return () => {\r\n+        window.removeEventListener('resize', handleResize);\r\n+      };\r\n+    }, []); // Empty dependency array means this effect runs once on mount and cleanup on unmount\r\n \r\n-  // useEffect(() => {\r\n-  //   const handleResize = () => {\r\n-  //     setIsMobile(window.innerWidth <= 768);\r\n-  //   };\r\n+    // useEffect(() => {\r\n+    //   const handleResize = () => {\r\n+    //     setIsMobile(window.innerWidth <= 768);\r\n+    //   };\r\n \r\n-  //   handleResize(); // Initial check\r\n-  //   window.addEventListener('resize', handleResize);\r\n+    //   handleResize(); // Initial check\r\n+    //   window.addEventListener('resize', handleResize);\r\n \r\n-  //   return () => {\r\n-  //     window.removeEventListener('resize', handleResize);\r\n-  //   };\r\n-  // }, []);\r\n+    //   return () => {\r\n+    //     window.removeEventListener('resize', handleResize);\r\n+    //   };\r\n+    // }, []);\r\n \r\n-  // useEffect(() => {\r\n+    // useEffect(() => {\r\n \r\n-  //   if (!isMobile) {\r\n-  //     setFilterVisible(true);\r\n-  //   }\r\n-  // }, [isMobile]);\r\n+    //   if (!isMobile) {\r\n+    //     setFilterVisible(true);\r\n+    //   }\r\n+    // }, [isMobile]);\r\n \r\n-  const handleSuggestionClick = (skintype: string) => {\r\n-    setSearchTerm(skintype);\r\n-    router.push({\r\n-      pathname: '/Fetched',\r\n-      query: { skintype: encodeURIComponent(skintype) },\r\n-    });\r\n-  };\r\n-  \r\n+    const handleSuggestionClick = (skintype: string) => {\r\n+      setSearchTerm(skintype);\r\n+      router.push({\r\n+        pathname: '/Fetched',\r\n+        query: { skintype: encodeURIComponent(skintype) },\r\n+      });\r\n+    };\r\n+    \r\n \r\n-  const toggleFilterVisibility = () => {\r\n-    setFilterVisible(prev => !prev);\r\n-  };\r\n+    const toggleFilterVisibility = () => {\r\n+      setFilterVisible(prev => !prev);\r\n+    };\r\n \r\n-  // const handleCardClick = (e: React.MouseEvent) => {\r\n-  //   e.stopPropagation(); // Prevent event from bubbling up\r\n-  // };\r\n+    // const handleCardClick = (e: React.MouseEvent) => {\r\n+    //   e.stopPropagation(); // Prevent event from bubbling up\r\n+    // };\r\n \r\n-  return (\r\n-    <div className={styles.cardContainer}>\r\n-      <FilterPopup\r\n-        filterVisible={filterVisible}\r\n-        toggleFilterVisibility={toggleFilterVisibility}\r\n-        selectedSkin={selectedSkin}\r\n-        setSelectedSkin={setSelectedSkin}\r\n-        selectedCategory={selectedCategory}\r\n-        setSelectedCategory={setSelectedCategory}\r\n-        selectedBuff={selectedBuff}\r\n-        setSelectedBuff={setSelectedBuff}\r\n-        handleGoClick={handleGoClick}\r\n-      />\r\n-      {isMobile && (\r\n-        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n-        </button>\r\n-      )}\r\n-      <div className={styles.cards}>\r\n-        {categories.map((category: any) => (\r\n-          <Link\r\n-            key={category._id}\r\n-            href={`/Skintypes/${category.name}`}\r\n-            style={{ textDecoration: 'none' }}\r\n-          >\r\n-            <div className={styles.card} >\r\n-              <Image\r\n-                src={category.photo}\r\n-                alt={category.name || 'Category Image'}\r\n-                className={styles.cardImage}\r\n-                width={500}\r\n-                height={300}\r\n-              />\r\n-              <div className={styles.cardContent}>\r\n-                <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n+    return (\r\n+      <div className={styles.cardContainer}>\r\n+        <FilterPopup\r\n+          filterVisible={filterVisible}\r\n+          toggleFilterVisibility={toggleFilterVisibility}\r\n+          selectedSkin={selectedSkin}\r\n+          setSelectedSkin={setSelectedSkin}\r\n+          selectedCategory={selectedCategory}\r\n+          setSelectedCategory={setSelectedCategory}\r\n+          selectedBuff={selectedBuff}\r\n+          setSelectedBuff={setSelectedBuff}\r\n+          // handleGoClick={handleGoClick}\r\n+        />\r\n+        {isMobile && (\r\n+          <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n+            {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n+          </button>\r\n+        )}\r\n+        <div className={styles.cards}>\r\n+          {categories.map((category: any) => (\r\n+            <Link\r\n+              key={category._id}\r\n+              href={`/Skintypes/${category.name}`}\r\n+              style={{ textDecoration: 'none' }}\r\n+            >\r\n+              <div className={styles.card} >\r\n+                <Image\r\n+                  src={category.photo}\r\n+                  alt={category.name || 'Category Image'}\r\n+                  className={styles.cardImage}\r\n+                  width={500}\r\n+                  height={300}\r\n+                />\r\n+                <div className={styles.cardContent}>\r\n+                  <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n+                </div>\r\n               </div>\r\n-            </div>\r\n-          </Link>\r\n-        ))}\r\n+            </Link>\r\n+          ))}\r\n+        </div>\r\n       </div>\r\n-    </div>\r\n-  );\r\n-};\r\n+    );\r\n+  };\r\n \r\n-export default Index;\r\n+  export default Index;\r\n"
                },
                {
                    "date": 1723874836236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,131 +1,132 @@\n-  import React, { useState, useEffect } from 'react';\r\n-  import axios from 'axios';\r\n-  import styles from './index.module.scss';\r\n-  import Link from 'next/link';\r\n-  import Image from 'next/image';\r\n-  import { useRouter } from 'next/router';\r\n-  import FilterPopup from '@/Components/Filterpop';\r\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import styles from './index.module.scss';\r\n+import Link from 'next/link';\r\n+import Image from 'next/image';\r\n+import { useRouter } from 'next/router';\r\n+import FilterPopup from '@/Components/Filterpop';\r\n \r\n-  const Index = () => {\r\n-    const [categories, setCategories] = useState<any>([]);\r\n-    const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n-    const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n-    const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n-    const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n-    const [isMobile, setIsMobile] = useState<boolean>(true);\r\n-    const router = useRouter();\r\n+const Index = () => {\r\n+  const [categories, setCategories] = useState<any>([]);\r\n+  const [filterVisible, setFilterVisible] = useState<boolean>(true);\r\n+  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n+  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n+  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n+  const [isMobile, setIsMobile] = useState<boolean>(true);\r\n+  const router = useRouter();\r\n \r\n-    useEffect(() => {\r\n-      const fetchData = async () => {\r\n-        try {\r\n-          const response = await axios.get(\r\n-            'https://www.referback.trollsufficient.com/data/all-category'\r\n-          );\r\n-          setCategories(response.data);\r\n-        } catch (error) {\r\n-          console.error('Error fetching data:', error);\r\n-        }\r\n-      };\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      try {\r\n+        const response = await axios.get(\r\n+          'https://www.referback.trollsufficient.com/data/all-category'\r\n+        );\r\n+        setCategories(response.data);\r\n+      } catch (error) {\r\n+        console.error('Error fetching data:', error);\r\n+      }\r\n+    };\r\n \r\n-      fetchData();\r\n-    }, []);\r\n-    useEffect(() => {\r\n-      // Define a function to handle resize\r\n-      const handleResize = () => {\r\n-        setFilterVisible(window.innerWidth >= 1024);\r\n-      };\r\n+    fetchData();\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    // Define a function to handle resize\r\n+    const handleResize = () => {\r\n+      setFilterVisible(window.innerWidth >= 1024);\r\n+    };\r\n \r\n-      // Set initial state\r\n-      handleResize();\r\n+    // Set initial state\r\n+    handleResize();\r\n \r\n-      // Add event listener for resize\r\n-      window.addEventListener('resize', handleResize);\r\n+    // Add event listener for resize\r\n+    window.addEventListener('resize', handleResize);\r\n \r\n-      // Cleanup the event listener on component unmount\r\n-      return () => {\r\n-        window.removeEventListener('resize', handleResize);\r\n-      };\r\n-    }, []); // Empty dependency array means this effect runs once on mount and cleanup on unmount\r\n+    // Cleanup the event listener on component unmount\r\n+    return () => {\r\n+      window.removeEventListener('resize', handleResize);\r\n+    };\r\n+  }, []); // Empty dependency array means this effect runs once on mount and cleanup on unmount\r\n \r\n-    // useEffect(() => {\r\n-    //   const handleResize = () => {\r\n-    //     setIsMobile(window.innerWidth <= 768);\r\n-    //   };\r\n+  // useEffect(() => {\r\n+  //   const handleResize = () => {\r\n+  //     setIsMobile(window.innerWidth <= 768);\r\n+  //   };\r\n \r\n-    //   handleResize(); // Initial check\r\n-    //   window.addEventListener('resize', handleResize);\r\n+  //   handleResize(); // Initial check\r\n+  //   window.addEventListener('resize', handleResize);\r\n \r\n-    //   return () => {\r\n-    //     window.removeEventListener('resize', handleResize);\r\n-    //   };\r\n-    // }, []);\r\n+  //   return () => {\r\n+  //     window.removeEventListener('resize', handleResize);\r\n+  //   };\r\n+  // }, []);\r\n \r\n-    // useEffect(() => {\r\n+  // useEffect(() => {\r\n \r\n-    //   if (!isMobile) {\r\n-    //     setFilterVisible(true);\r\n-    //   }\r\n-    // }, [isMobile]);\r\n+  //   if (!isMobile) {\r\n+  //     setFilterVisible(true);\r\n+  //   }\r\n+  // }, [isMobile]);\r\n \r\n-    const handleSuggestionClick = (skintype: string) => {\r\n-      setSearchTerm(skintype);\r\n-      router.push({\r\n-        pathname: '/Fetched',\r\n-        query: { skintype: encodeURIComponent(skintype) },\r\n-      });\r\n-    };\r\n-    \r\n+  const handleGoClick = () => {\r\n+    router.push({\r\n+      pathname: '/Fetched',\r\n+      query: {\r\n+        skintype: selectedCategory,\r\n+        name: selectedBuff,\r\n+      },\r\n+    });\r\n+  };\r\n \r\n-    const toggleFilterVisibility = () => {\r\n-      setFilterVisible(prev => !prev);\r\n-    };\r\n+  const toggleFilterVisibility = () => {\r\n+    setFilterVisible(prev => !prev);\r\n+  };\r\n \r\n-    // const handleCardClick = (e: React.MouseEvent) => {\r\n-    //   e.stopPropagation(); // Prevent event from bubbling up\r\n-    // };\r\n+  // const handleCardClick = (e: React.MouseEvent) => {\r\n+  //   e.stopPropagation(); // Prevent event from bubbling up\r\n+  // };\r\n \r\n-    return (\r\n-      <div className={styles.cardContainer}>\r\n-        <FilterPopup\r\n-          filterVisible={filterVisible}\r\n-          toggleFilterVisibility={toggleFilterVisibility}\r\n-          selectedSkin={selectedSkin}\r\n-          setSelectedSkin={setSelectedSkin}\r\n-          selectedCategory={selectedCategory}\r\n-          setSelectedCategory={setSelectedCategory}\r\n-          selectedBuff={selectedBuff}\r\n-          setSelectedBuff={setSelectedBuff}\r\n-          // handleGoClick={handleGoClick}\r\n-        />\r\n-        {isMobile && (\r\n-          <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n-            {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n-          </button>\r\n-        )}\r\n-        <div className={styles.cards}>\r\n-          {categories.map((category: any) => (\r\n-            <Link\r\n-              key={category._id}\r\n-              href={`/Skintypes/${category.name}`}\r\n-              style={{ textDecoration: 'none' }}\r\n-            >\r\n-              <div className={styles.card} >\r\n-                <Image\r\n-                  src={category.photo}\r\n-                  alt={category.name || 'Category Image'}\r\n-                  className={styles.cardImage}\r\n-                  width={500}\r\n-                  height={300}\r\n-                />\r\n-                <div className={styles.cardContent}>\r\n-                  <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n-                </div>\r\n+  return (\r\n+    <div className={styles.cardContainer}>\r\n+      <FilterPopup\r\n+        filterVisible={filterVisible}\r\n+        toggleFilterVisibility={toggleFilterVisibility}\r\n+        selectedSkin={selectedSkin}\r\n+        setSelectedSkin={setSelectedSkin}\r\n+        selectedCategory={selectedCategory}\r\n+        setSelectedCategory={setSelectedCategory}\r\n+        selectedBuff={selectedBuff}\r\n+        setSelectedBuff={setSelectedBuff}\r\n+        handleGoClick={handleGoClick}\r\n+      />\r\n+      {isMobile && (\r\n+        <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n+          {filterVisible ? 'Hide Filters' : 'Show Filters'}\r\n+        </button>\r\n+      )}\r\n+      <div className={styles.cards}>\r\n+        {categories.map((category: any) => (\r\n+          <Link\r\n+            key={category._id}\r\n+            href={`/Skintypes/${category.name}`}\r\n+            style={{ textDecoration: 'none' }}\r\n+          >\r\n+            <div className={styles.card} >\r\n+              <Image\r\n+                src={category.photo}\r\n+                alt={category.name || 'Category Image'}\r\n+                className={styles.cardImage}\r\n+                width={500}\r\n+                height={300}\r\n+              />\r\n+              <div className={styles.cardContent}>\r\n+                <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n               </div>\r\n-            </Link>\r\n-          ))}\r\n-        </div>\r\n+            </div>\r\n+          </Link>\r\n+        ))}\r\n       </div>\r\n-    );\r\n-  };\r\n+    </div>\r\n+  );\r\n+};\r\n \r\n-  export default Index;\r\n+export default Index;\r\n"
                }
            ],
            "date": 1723790201809,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./index.module.scss\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Index = () => {\r\n  const [categories, setCategories] = useState<any>([]);\r\n  const [filterVisible, setFilterVisible] = useState<boolean>(false);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [selectedSkin, setSelectedSkin] = useState<string>('');\r\n  const [selectedBuff, setSelectedBuff] = useState<string>('');\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const setInitialFilterVisibility = () => {\r\n      if (window.innerWidth <= 768) {\r\n        setFilterVisible(false);\r\n      } else {\r\n        setFilterVisible(true);\r\n      }\r\n    };\r\n\r\n    setInitialFilterVisibility();\r\n\r\n    window.addEventListener(\"resize\", setInitialFilterVisibility);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setInitialFilterVisibility);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://www.referback.trollsufficient.com/data/all-category\"\r\n        );\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleGoClick = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    router.push({\r\n      pathname: '/Fetched',\r\n      query: {\r\n        skintype: selectedCategory,\r\n        name: selectedBuff,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleFilterVisibility = () => {\r\n    setFilterVisible(!filterVisible);\r\n  };\r\n\r\n  const closeFilter = (e: React.MouseEvent) => {\r\n    e.stopPropagation(); // Prevent click from propagating to the background\r\n    setFilterVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.cardContainer}>\r\n      {filterVisible && (\r\n        <div className={`${styles.filter} ${filterVisible ? styles.filterVisible : ''}`}>\r\n          <button className={styles.closeButton} onClick={closeFilter}>\r\n            &times;\r\n          </button>\r\n          <form onSubmit={handleGoClick}>\r\n            <div className={styles.search_box}>\r\n              <label>Search Box</label>\r\n              <input \r\n                placeholder=\"Search Here\" \r\n                type=\"text\" \r\n                value={selectedSkin}\r\n                onChange={(e) => setSelectedSkin(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.search_box}>\r\n              <label>Select Category</label>\r\n              <input \r\n                placeholder=\"Category\" \r\n                type=\"text\" \r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.search_box}>\r\n              <label>Select Buff</label>\r\n              <input \r\n                placeholder=\"Buff\" \r\n                type=\"text\" \r\n                value={selectedBuff}\r\n                onChange={(e) => setSelectedBuff(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.btn}>\r\n              <button type=\"submit\" style={{ width: \"100px\", height: \"30px\", marginTop: \"30px\", cursor: \"pointer\" }}>GO</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <button className={styles.filterButton} onClick={toggleFilterVisibility}>\r\n        {filterVisible ? \"Hide Filters\" : \"Show Filters\"}\r\n      </button>\r\n      <div className={styles.cards}>\r\n        {categories.map((category: any) => (\r\n          <Link\r\n            key={category._id}\r\n            href={`/Skintypes/${category.name}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <div className={styles.card}>\r\n              <Image\r\n                src={category.photo}\r\n                alt={category.name || \"Category Image\"}\r\n                className={styles.cardImage}\r\n                width={500}\r\n                height={300}\r\n              />\r\n              <div className={styles.cardContent}>\r\n                <h2 className={styles.cardTitle}>{category.name.toUpperCase()}</h2>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"
        }
    ]
}