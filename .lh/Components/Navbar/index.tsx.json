{
    "sourceFile": "Components/Navbar/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1723803776962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723803956450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,17 @@\n import style from \"./index.module.scss\";\r\n import Link from \"next/link\";\r\n import axios from \"axios\";\r\n import { useRouter } from \"next/router\";\r\n-import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-// import { faMagnifyingGlass } from '@fortawesome/free-regular-svg-icons';\r\n \r\n const Navbar = () => {\r\n   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n   const [coins, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n+  const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n+  const [suggestions, setSuggestions] = useState<any[]>([]);\r\n+  const [allData, setAllData] = useState<any[]>([]);\r\n   const router = useRouter();\r\n \r\n   // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n@@ -28,11 +29,9 @@\n     const token = localStorage.getItem(\"accessToken\");\r\n     const role = localStorage.getItem(\"role\");\r\n     setIsAuthenticated(!!token);\r\n     setUserRole(role);\r\n-    console.log(\"Token:\", token);\r\n-    console.log(\"Role:\", role);\r\n-    \r\n+\r\n     const fetchCoins = async () => {\r\n       if (token) {\r\n         try {\r\n           const userId = localStorage.getItem(\"userId\");\r\n@@ -54,41 +53,85 @@\n       }\r\n     };\r\n \r\n     fetchCoins();\r\n-  }, [isAuthenticated]); // Empty dependency array to run only on mount\r\n+  }, [isAuthenticated]);\r\n \r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      try {\r\n+        const response = await axios.get('https://www.referback.trollsufficient.com/data/sort');\r\n+        setAllData(response.data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching data:\", error);\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (searchTerm) {\r\n+      const filteredSuggestions = allData.filter(item =>\r\n+        item.skintype.toLowerCase().includes(searchTerm.toLowerCase())\r\n+      );\r\n+      setSuggestions(filteredSuggestions);\r\n+    } else {\r\n+      setSuggestions([]);\r\n+    }\r\n+  }, [searchTerm, allData]);\r\n+\r\n   const handleLogout = async () => {\r\n-    // Remove items from localStorage\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n     localStorage.removeItem(\"userCoins\");\r\n     localStorage.removeItem(\"role\");\r\n \r\n-    // Reset state\r\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n \r\n-    // Redirect to home page\r\n     router.push(\"/\").then(() => {\r\n-      // Ensure the page reloads to reflect logout\r\n       window.location.reload();\r\n     });\r\n   };\r\n \r\n+  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    setSearchTerm(e.target.value);\r\n+  };\r\n+\r\n+  const handleSuggestionClick = (skintype: string) => {\r\n+    setSearchTerm(skintype);\r\n+    router.push(`/details/${skintype}`); // Navigate to the detailed page\r\n+  };\r\n+\r\n   return (\r\n     <div className={style.navbar_cain}>\r\n       <div className={style.hamburger} onClick={toggleMenu}>\r\n-        {\r\n-          isMenuOpen?\"X\":\"☰\"\r\n-        }\r\n+        {isMenuOpen ? \"X\" : \"☰\"}\r\n       </div>\r\n       <div className={style.image}></div>\r\n       <div className={style.search_box}>\r\n-        <input className={style.input} placeholder=\"Enter Favorite Skins\" />\r\n-        {/* <FontAwesomeIcon icon={faMagnifyingGlass} style={{\"zIndex\":\"10\"}}/> */}\r\n+        <input\r\n+          className={style.input}\r\n+          placeholder=\"Enter Favorite Skins\"\r\n+          value={searchTerm}\r\n+          onChange={handleSearchChange}\r\n+        />\r\n+        {suggestions.length > 0 && (\r\n+          <div className={style.suggestions}>\r\n+            {suggestions.map((item) => (\r\n+              <div\r\n+                key={item._id}\r\n+                className={style.suggestionItem}\r\n+                onClick={() => handleSuggestionClick(item.skintype)}\r\n+              >\r\n+                {item.skintype}\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n       </div>\r\n       <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n         <li className={style.items} onClick={closeMenu}>\r\n           <div className={style.name}>\r\n@@ -107,10 +150,10 @@\n           </div>\r\n         </li>\r\n         <li className={style.items} onClick={closeMenu}>\r\n           <div className={style.name}>\r\n-          <Link href=\"/Skintypes\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n-            <p>Skins</p>\r\n+            <Link href=\"/Skintypes\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n+              <p>Skins</p>\r\n             </Link>\r\n             <hr className={style.line} />\r\n           </div>\r\n         </li>\r\n"
                },
                {
                    "date": 1723804065041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,12 @@\n                 key={item._id}\r\n                 className={style.suggestionItem}\r\n                 onClick={() => handleSuggestionClick(item.skintype)}\r\n               >\r\n-                {item.skintype}\r\n+                <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} />\r\n+                <div className={style.suggestionText}>\r\n+                  {item.skintype}\r\n+                </div>\r\n               </div>\r\n             ))}\r\n           </div>\r\n         )}\r\n"
                },
                {
                    "date": 1723804111543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n                 key={item._id}\r\n                 className={style.suggestionItem}\r\n                 onClick={() => handleSuggestionClick(item.skintype)}\r\n               >\r\n-                <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} />\r\n+                {/* <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} /> */}\r\n                 <div className={style.suggestionText}>\r\n                   {item.skintype}\r\n                 </div>\r\n               </div>\r\n"
                },
                {
                    "date": 1723804178049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n                 key={item._id}\r\n                 className={style.suggestionItem}\r\n                 onClick={() => handleSuggestionClick(item.skintype)}\r\n               >\r\n-                {/* <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} /> */}\r\n+                <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} />\r\n                 <div className={style.suggestionText}>\r\n                   {item.skintype}\r\n                 </div>\r\n               </div>\r\n"
                },
                {
                    "date": 1723804184033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,12 +125,9 @@\n                 key={item._id}\r\n                 className={style.suggestionItem}\r\n                 onClick={() => handleSuggestionClick(item.skintype)}\r\n               >\r\n-                <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} />\r\n-                <div className={style.suggestionText}>\r\n-                  {item.skintype}\r\n-                </div>\r\n+                {item.skintype}\r\n               </div>\r\n             ))}\r\n           </div>\r\n         )}\r\n"
                },
                {
                    "date": 1723804190399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,12 @@\n                 key={item._id}\r\n                 className={style.suggestionItem}\r\n                 onClick={() => handleSuggestionClick(item.skintype)}\r\n               >\r\n-                {item.skintype}\r\n+                {/* <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} /> */}\r\n+                <div className={style.suggestionText}>\r\n+                  {item.skintype}\r\n+                </div>\r\n               </div>\r\n             ))}\r\n           </div>\r\n         )}\r\n"
                },
                {
                    "date": 1723870310574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,8 +125,9 @@\n                 key={item._id}\r\n                 className={style.suggestionItem}\r\n                 onClick={() => handleSuggestionClick(item.skintype)}\r\n               >\r\n+                {/* Optionally add an image */}\r\n                 {/* <img src={item.photo[0]} alt={item.skintype} className={style.suggestionImage} /> */}\r\n                 <div className={style.suggestionText}>\r\n                   {item.skintype}\r\n                 </div>\r\n"
                },
                {
                    "date": 1723874489917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n   };\r\n \r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n-    router.push(`/details/${skintype}`); // Navigate to the detailed page\r\n+    router.push(`/Fetched/${skintype}`); // Navigate to the detailed page\r\n   };\r\n \r\n   return (\r\n     <div className={style.navbar_cain}>\r\n"
                },
                {
                    "date": 1723874609883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,10 +101,11 @@\n   };\r\n \r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n-    router.push(`/Fetched/${skintype}`); // Navigate to the detailed page\r\n+    router.push(`/Fetched/${encodeURIComponent(skintype)}`); // Navigate to the detailed page with skintype as a parameter\r\n   };\r\n+  \r\n \r\n   return (\r\n     <div className={style.navbar_cain}>\r\n       <div className={style.hamburger} onClick={toggleMenu}>\r\n"
                },
                {
                    "date": 1723874652187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,10 +99,10 @@\n   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setSearchTerm(e.target.value);\r\n   };\r\n \r\n-  const handleSuggestionClick = (skintype: string) => {\r\n-    setSearchTerm(skintype);\r\n+  const handleSuggestionClick = (name: string) => {\r\n+    setSearchTerm(name);\r\n     router.push(`/Fetched/${encodeURIComponent(skintype)}`); // Navigate to the detailed page with skintype as a parameter\r\n   };\r\n   \r\n \r\n"
                },
                {
                    "date": 1723874657669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n   };\r\n \r\n   const handleSuggestionClick = (name: string) => {\r\n     setSearchTerm(name);\r\n-    router.push(`/Fetched/${encodeURIComponent(skintype)}`); // Navigate to the detailed page with skintype as a parameter\r\n+    router.push(`/Fetched/${encodeURIComponent(name)}`); // Navigate to the detailed page with skintype as a parameter\r\n   };\r\n   \r\n \r\n   return (\r\n"
                },
                {
                    "date": 1723874881527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import axios from \"axios\";\r\n import { useRouter } from \"next/router\";\r\n \r\n const Navbar = () => {\r\n-  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n+  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\r\n   const [coins, setCoins] = useState<number>(0);\r\n   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n   const [userRole, setUserRole] = useState<string | null>(null);\r\n   const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n@@ -15,9 +15,9 @@\n   const router = useRouter();\r\n \r\n   // Toggle menu visibility\r\n   const toggleMenu = () => {\r\n-    setIsMenuOpen((prevState) => !prevState);\r\n+    setIsMenuOpen(prevState => !prevState);\r\n   };\r\n \r\n   // Close menu\r\n   const closeMenu = () => {\r\n@@ -55,8 +55,9 @@\n \r\n     fetchCoins();\r\n   }, [isAuthenticated]);\r\n \r\n+  // Fetch all data for suggestions\r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n       try {\r\n         const response = await axios.get('https://www.referback.trollsufficient.com/data/sort');\r\n@@ -68,8 +69,9 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n+  // Update suggestions based on search term\r\n   useEffect(() => {\r\n     if (searchTerm) {\r\n       const filteredSuggestions = allData.filter(item =>\r\n         item.skintype.toLowerCase().includes(searchTerm.toLowerCase())\r\n@@ -79,8 +81,9 @@\n       setSuggestions([]);\r\n     }\r\n   }, [searchTerm, allData]);\r\n \r\n+  // Handle logout\r\n   const handleLogout = async () => {\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"userName\");\r\n     localStorage.removeItem(\"userId\");\r\n@@ -90,22 +93,25 @@\n     setCoins(0);\r\n     setIsAuthenticated(false);\r\n     setUserRole(null);\r\n \r\n-    router.push(\"/\").then(() => {\r\n-      window.location.reload();\r\n-    });\r\n+    await router.push(\"/\");\r\n+    window.location.reload();\r\n   };\r\n \r\n+  // Handle search term change\r\n   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setSearchTerm(e.target.value);\r\n   };\r\n \r\n-  const handleSuggestionClick = (name: string) => {\r\n-    setSearchTerm(name);\r\n-    router.push(`/Fetched/${encodeURIComponent(name)}`); // Navigate to the detailed page with skintype as a parameter\r\n+  // Handle suggestion click\r\n+  const handleSuggestionClick = (skintype: string) => {\r\n+    setSearchTerm(skintype);\r\n+    router.push({\r\n+      pathname: '/Fetched',\r\n+      query: { skintype: encodeURIComponent(skintype) },\r\n+    });\r\n   };\r\n-  \r\n \r\n   return (\r\n     <div className={style.navbar_cain}>\r\n       <div className={style.hamburger} onClick={toggleMenu}>\r\n"
                },
                {
                    "date": 1723874931148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n     router.push({\r\n       pathname: '/Fetched',\r\n-      query: { skintype: encodeURIComponent(skintype) },\r\n+      query: { name: encodeURIComponent(skintype) },\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1723875036359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,11 +105,13 @@\n \r\n   // Handle suggestion click\r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n+    // Replace spaces with + and encode other special characters\r\n+    const encodedSkintype = encodeURIComponent(skintype).replace(/%20/g, '+');\r\n     router.push({\r\n       pathname: '/Fetched',\r\n-      query: { name: encodeURIComponent(skintype) },\r\n+      query: { skintype: encodedSkintype },\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1723875295841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,16 +102,15 @@\n   const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     setSearchTerm(e.target.value);\r\n   };\r\n \r\n-  // Handle suggestion click\r\n+  // Handle suggestion click with proper encoding\r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n-    // Replace spaces with + and encode other special characters\r\n-    const encodedSkintype = encodeURIComponent(skintype).replace(/%20/g, '+');\r\n+    const formattedSkintype = encodeURIComponent(skintype).replace(/%20/g, '+');\r\n     router.push({\r\n       pathname: '/Fetched',\r\n-      query: { skintype: encodedSkintype },\r\n+      query: { skintype: formattedSkintype },\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1723875483911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n           }\r\n         } catch (error) {\r\n           console.error(\"Error fetching coins:\", error);\r\n         }\r\n-      }\r\n+      }      \r\n     };\r\n \r\n     fetchCoins();\r\n   }, [isAuthenticated]);\r\n@@ -105,9 +105,9 @@\n \r\n   // Handle suggestion click with proper encoding\r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n-    const formattedSkintype = encodeURIComponent(skintype).replace(/%20/g, '+');\r\n+    const formattedSkintype = encodeURIComponent(skintype).replace(/%20/g,'+');\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: { skintype: formattedSkintype },\r\n     });\r\n"
                },
                {
                    "date": 1723875491283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n \r\n   // Handle suggestion click with proper encoding\r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n-    const formattedSkintype = encodeURIComponent(skintype).replace(/%20/g,'+');\r\n+    const formattedSkintype = encodeURIComponent(skintype).replace(/%27/g,'+');\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: { skintype: formattedSkintype },\r\n     });\r\n"
                },
                {
                    "date": 1723875502486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n \r\n   // Handle suggestion click with proper encoding\r\n   const handleSuggestionClick = (skintype: string) => {\r\n     setSearchTerm(skintype);\r\n-    const formattedSkintype = encodeURIComponent(skintype).replace(/%27/g,'+');\r\n+    const formattedSkintype = encodeURIComponent(skintype).replace(/%/g,'+');\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: { skintype: formattedSkintype },\r\n     });\r\n"
                },
                {
                    "date": 1723875574124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,13 +104,14 @@\n   };\r\n \r\n   // Handle suggestion click with proper encoding\r\n   const handleSuggestionClick = (skintype: string) => {\r\n-    setSearchTerm(skintype);\r\n-    const formattedSkintype = encodeURIComponent(skintype).replace(/%/g,'+');\r\n     router.push({\r\n       pathname: '/Fetched',\r\n-      query: { skintype: formattedSkintype },\r\n+      query: {\r\n+        // skintype: selectedCategory,\r\n+        name: skintype,\r\n+      },\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1723875641057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n         // skintype: selectedCategory,\r\n-        name: skintype,\r\n+        name: `skintype=&name${skintype}`,\r\n       },\r\n     });\r\n   };\r\n \r\n"
                },
                {
                    "date": 1723875704338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n         // skintype: selectedCategory,\r\n-        name: `skintype=&name${skintype}`,\r\n+        name: `${skintype}`,\r\n       },\r\n     });\r\n   };\r\n \r\n"
                },
                {
                    "date": 1723875776886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n   const handleSuggestionClick = (skintype: string) => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n-        // skintype: selectedCategory,\r\n+        skintype: \"skintype=&\",\r\n         name: `${skintype}`,\r\n       },\r\n     });\r\n   };\r\n"
                },
                {
                    "date": 1723875845058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n   const handleSuggestionClick = (skintype: string) => {\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n-        skintype: \"skintype=&\",\r\n+        skintype:\"=\",\r\n         name: `${skintype}`,\r\n       },\r\n     });\r\n   };\r\n"
                },
                {
                    "date": 1723875917899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,13 +104,14 @@\n   };\r\n \r\n   // Handle suggestion click with proper encoding\r\n   const handleSuggestionClick = (skintype: string) => {\r\n+    setSearchTerm(skintype);\r\n     router.push({\r\n       pathname: '/Fetched',\r\n       query: {\r\n-        skintype:\"=\",\r\n-        name: `${skintype}`,\r\n+        skintype: \"\",  // Set skintype to an empty string if needed\r\n+        name: skintype.replace(/ /g, '+'), // Replace spaces with '+'\r\n       },\r\n     });\r\n   };\r\n \r\n"
                }
            ],
            "date": 1723803776962,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.scss\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faMagnifyingGlass } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [coins, setCoins] = useState<number>(0);\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  // Toggle menu visibility\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen((prevState) => !prevState);\r\n  };\r\n\r\n  // Close menu\r\n  const closeMenu = () => {\r\n    setIsMenuOpen(false);\r\n  };\r\n\r\n  // Check authentication status and fetch user data\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    const role = localStorage.getItem(\"role\");\r\n    setIsAuthenticated(!!token);\r\n    setUserRole(role);\r\n    console.log(\"Token:\", token);\r\n    console.log(\"Role:\", role);\r\n    \r\n    const fetchCoins = async () => {\r\n      if (token) {\r\n        try {\r\n          const userId = localStorage.getItem(\"userId\");\r\n          if (userId) {\r\n            const coinsResponse = await axios.get(\r\n              `https://www.referback.trollsufficient.com/admin/coins/${userId}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            );\r\n            setCoins(coinsResponse.data.coins);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching coins:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCoins();\r\n  }, [isAuthenticated]); // Empty dependency array to run only on mount\r\n\r\n  const handleLogout = async () => {\r\n    // Remove items from localStorage\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userCoins\");\r\n    localStorage.removeItem(\"role\");\r\n\r\n    // Reset state\r\n    setCoins(0);\r\n    setIsAuthenticated(false);\r\n    setUserRole(null);\r\n\r\n    // Redirect to home page\r\n    router.push(\"/\").then(() => {\r\n      // Ensure the page reloads to reflect logout\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.navbar_cain}>\r\n      <div className={style.hamburger} onClick={toggleMenu}>\r\n        {\r\n          isMenuOpen?\"X\":\"☰\"\r\n        }\r\n      </div>\r\n      <div className={style.image}></div>\r\n      <div className={style.search_box}>\r\n        <input className={style.input} placeholder=\"Enter Favorite Skins\" />\r\n        {/* <FontAwesomeIcon icon={faMagnifyingGlass} style={{\"zIndex\":\"10\"}}/> */}\r\n      </div>\r\n      <ul className={`${style.caintainer} ${isMenuOpen ? style.showMenu : \"\"}`}>\r\n        <li className={style.items} onClick={closeMenu}>\r\n          <div className={style.name}>\r\n            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n              <p>Home</p>\r\n            </Link>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items} onClick={closeMenu}>\r\n          <div className={style.name}>\r\n            <Link href=\"/Tree\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n              <p>Alluser</p>\r\n            </Link>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items} onClick={closeMenu}>\r\n          <div className={style.name}>\r\n          <Link href=\"/Skintypes\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n            <p>Skins</p>\r\n            </Link>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items} onClick={closeMenu}>\r\n          <div className={style.name}>\r\n            <Link href=\"/contact\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n              <p>Contact</p>\r\n            </Link>\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n        <li className={style.items} onClick={closeMenu}>\r\n          <div className={style.name}>\r\n            {!isAuthenticated ? (\r\n              <Link href=\"/Login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                <p>Login</p>\r\n              </Link>\r\n            ) : (\r\n              <button className={style.links} onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n            )}\r\n            <hr className={style.line} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"
        }
    ]
}